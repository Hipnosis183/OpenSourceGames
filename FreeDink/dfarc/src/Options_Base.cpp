// -*- C++ -*-
//
// generated by wxGlade not found on Tue Jun  5 23:21:40 2018
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//

#include "Options_Base.h"

// begin wxGlade: ::extracode
// end wxGlade



Options_Base::Options_Base(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER)
{
    // begin wxGlade: Options_Base::Options_Base
    mCloseCheck = new wxCheckBox(this, wxID_ANY, _("Close DFArc on play"));
    mShowDeveloperCheck = new wxCheckBox(this, wxID_ANY, _("Show developer buttons"));
    mWriteIniCheck = new wxCheckBox(this, wxID_ANY, _("The engine updates dinksmallwood.ini on run (deprecated)"));
    mOverrideDinkrefDirCheck = new wxCheckBox(this, wxID_ANY, _("Override the Dink Smallwood directory"));
    mOverrideDinkrefDirBox = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    mOverrideDinkrefDirBrowse = new wxButton(this, ID_OVERRIDE_DINKREFDIR_BROWSE, _("Browse"));
    lDModDirLabel = new wxStaticText(this, wxID_ANY, _("Additional D-Mods directory"));
    mDModDirBox = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    mDModDirBrowse = new wxButton(this, ID_DMODDIR_BROWSE, _("Browse"));
    lDinkExeLabel = new wxStaticText(this, wxID_ANY, _("Game program name"));
    const wxString mDinkExeBox_choices[] = {};
    mDinkExeBox = new wxComboBox(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, 0, mDinkExeBox_choices, wxCB_SORT);
    lEditorExeLabel = new wxStaticText(this, wxID_ANY, _("Editor program name"));
    const wxString mEditorExeBox_choices[] = {};
    mEditorExeBox = new wxComboBox(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, 0, mEditorExeBox_choices, wxCB_SORT);
    mPreferredFileBrowserLabel = new wxStaticText(this, wxID_ANY, _("Preferred file browser"));
    mPreferredFileBrowserBox = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    lForceLocaleLabel = new wxStaticText(this, wxID_ANY, _("DFArc language\n(restart DFArc to apply)"));
    const wxString mLanguageList_choices[] = {};
    mLanguageList = new wxChoice(this, ID_LANGUAGE_LIST, wxDefaultPosition, wxDefaultSize, 0, mLanguageList_choices);
    mForceLocaleBox = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    lOkay = new wxButton(this, wxID_OK, wxEmptyString);
    lCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void Options_Base::set_properties()
{
    // begin wxGlade: Options_Base::set_properties
    SetTitle(_("DFArc - Options"));
    lOkay->SetDefault();
    // end wxGlade
}


void Options_Base::do_layout()
{
    // begin wxGlade: Options_Base::do_layout
    wxBoxSizer* lMainSizer = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* lChoicesSizer = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* lForceLocaleSizer = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_1 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* mPreferredFileBrowserSizer = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* lEditorExeSizer = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* lDinkExeSizer = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* dmoddir = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* lOverrideSizer = new wxBoxSizer(wxHORIZONTAL);
    lMainSizer->Add(mCloseCheck, 0, wxLEFT|wxRIGHT|wxTOP, 10);
    lMainSizer->Add(mShowDeveloperCheck, 0, wxLEFT|wxRIGHT|wxTOP, 10);
    lMainSizer->Add(mWriteIniCheck, 0, wxLEFT|wxRIGHT|wxTOP, 10);
    lOverrideSizer->Add(mOverrideDinkrefDirCheck, 0, 0, 0);
    lOverrideSizer->Add(mOverrideDinkrefDirBox, 1, wxLEFT, 10);
    lOverrideSizer->Add(mOverrideDinkrefDirBrowse, 0, wxLEFT, 10);
    lMainSizer->Add(lOverrideSizer, 0, wxEXPAND|wxLEFT|wxRIGHT|wxTOP, 10);
    dmoddir->Add(lDModDirLabel, 0, 0, 0);
    dmoddir->Add(mDModDirBox, 1, wxLEFT, 10);
    dmoddir->Add(mDModDirBrowse, 0, wxLEFT, 10);
    lMainSizer->Add(dmoddir, 0, wxEXPAND|wxLEFT|wxRIGHT|wxTOP, 10);
    lDinkExeSizer->Add(lDinkExeLabel, 0, 0, 10);
    lDinkExeSizer->Add(mDinkExeBox, 1, wxLEFT, 10);
    lMainSizer->Add(lDinkExeSizer, 0, wxEXPAND|wxLEFT|wxRIGHT|wxTOP, 10);
    lEditorExeSizer->Add(lEditorExeLabel, 0, 0, 10);
    lEditorExeSizer->Add(mEditorExeBox, 1, wxLEFT, 10);
    lMainSizer->Add(lEditorExeSizer, 0, wxEXPAND|wxLEFT|wxRIGHT|wxTOP, 10);
    mPreferredFileBrowserSizer->Add(mPreferredFileBrowserLabel, 0, wxLEFT, 0);
    mPreferredFileBrowserSizer->Add(mPreferredFileBrowserBox, 1, wxLEFT, 10);
    lMainSizer->Add(mPreferredFileBrowserSizer, 0, wxEXPAND|wxLEFT|wxRIGHT|wxTOP, 10);
    lForceLocaleSizer->Add(lForceLocaleLabel, 0, 0, 10);
    sizer_1->Add(mLanguageList, 0, wxEXPAND, 0);
    sizer_1->Add(mForceLocaleBox, 0, wxEXPAND, 0);
    lForceLocaleSizer->Add(sizer_1, 1, wxEXPAND|wxLEFT, 10);
    lMainSizer->Add(lForceLocaleSizer, 0, wxEXPAND|wxLEFT|wxRIGHT|wxTOP, 10);
    lChoicesSizer->Add(lOkay, 0, wxALIGN_BOTTOM, 0);
    lChoicesSizer->Add(lCancel, 0, wxALIGN_BOTTOM|wxLEFT, 10);
    lMainSizer->Add(lChoicesSizer, 1, wxALIGN_BOTTOM|wxALL, 10);
    SetSizer(lMainSizer);
    lMainSizer->Fit(this);
    Layout();
    // end wxGlade
}

