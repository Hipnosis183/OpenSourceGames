# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@

# gettext:
# Relative locale dir for woe/android
@WOE_TRUE@am__append_1 = -DLOCALEDIR=\"freedink/locale\"
@ANDROID_TRUE@@WOE_FALSE@am__append_2 = -DLOCALEDIR=\"freedink/locale\"
@ANDROID_FALSE@@WOE_FALSE@am__append_3 = -DLOCALEDIR=\"$(localedir)\"
@ANDROID_TRUE@am__append_4 = -llog
bin_PROGRAMS = freedink$(EXEEXT) freedinkedit$(EXEEXT)
@HAVE_TESTS_TRUE@check_PROGRAMS = test_str_util$(EXEEXT) \
@HAVE_TESTS_TRUE@	test_io_util$(EXEEXT) TestEditorMap$(EXEEXT) \
@HAVE_TESTS_TRUE@	test_editor_screen$(EXEEXT) \
@HAVE_TESTS_TRUE@	test_dinkini$(EXEEXT) test_dinkc$(EXEEXT) \
@HAVE_TESTS_TRUE@	test_dinkc_console$(EXEEXT) \
@HAVE_TESTS_TRUE@	test_dinkc_bindings$(EXEEXT) \
@HAVE_TESTS_TRUE@	test_live_sprites_manager$(EXEEXT) \
@HAVE_TESTS_TRUE@	test_brain_text$(EXEEXT) test_text$(EXEEXT) \
@HAVE_TESTS_TRUE@	test_gfx_fonts$(EXEEXT) \
@HAVE_TESTS_TRUE@	TestIOGfxDisplay$(EXEEXT) \
@HAVE_TESTS_TRUE@	TestIOTouchDragAnywhere$(EXEEXT) \
@HAVE_TESTS_TRUE@	test_integration$(EXEEXT)
@HAVE_TESTS_TRUE@am__append_5 = test_android_workaround.h \
@HAVE_TESTS_TRUE@	$(patsubst %$(EXEEXT),%.cxx,$(check_PROGRAMS))

subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/autotools/m4/gettext.m4 \
	$(top_srcdir)/autotools/m4/iconv.m4 \
	$(top_srcdir)/autotools/m4/intlmacosx.m4 \
	$(top_srcdir)/autotools/m4/lib-ld.m4 \
	$(top_srcdir)/autotools/m4/lib-link.m4 \
	$(top_srcdir)/autotools/m4/lib-prefix.m4 \
	$(top_srcdir)/autotools/m4/nls.m4 \
	$(top_srcdir)/autotools/m4/po.m4 \
	$(top_srcdir)/autotools/m4/progtest.m4 \
	$(top_srcdir)/gnulib/m4/00gnulib.m4 \
	$(top_srcdir)/gnulib/m4/absolute-header.m4 \
	$(top_srcdir)/gnulib/m4/alloca.m4 \
	$(top_srcdir)/gnulib/m4/errno_h.m4 \
	$(top_srcdir)/gnulib/m4/error.m4 \
	$(top_srcdir)/gnulib/m4/exponentd.m4 \
	$(top_srcdir)/gnulib/m4/extensions.m4 \
	$(top_srcdir)/gnulib/m4/extern-inline.m4 \
	$(top_srcdir)/gnulib/m4/float_h.m4 \
	$(top_srcdir)/gnulib/m4/getopt.m4 \
	$(top_srcdir)/gnulib/m4/gnulib-common.m4 \
	$(top_srcdir)/gnulib/m4/gnulib-comp.m4 \
	$(top_srcdir)/gnulib/m4/include_next.m4 \
	$(top_srcdir)/gnulib/m4/intmax_t.m4 \
	$(top_srcdir)/gnulib/m4/inttypes_h.m4 \
	$(top_srcdir)/gnulib/m4/longlong.m4 \
	$(top_srcdir)/gnulib/m4/memchr.m4 \
	$(top_srcdir)/gnulib/m4/mmap-anon.m4 \
	$(top_srcdir)/gnulib/m4/msvc-inval.m4 \
	$(top_srcdir)/gnulib/m4/msvc-nothrow.m4 \
	$(top_srcdir)/gnulib/m4/multiarch.m4 \
	$(top_srcdir)/gnulib/m4/nocrash.m4 \
	$(top_srcdir)/gnulib/m4/off_t.m4 \
	$(top_srcdir)/gnulib/m4/printf.m4 \
	$(top_srcdir)/gnulib/m4/size_max.m4 \
	$(top_srcdir)/gnulib/m4/ssize_t.m4 \
	$(top_srcdir)/gnulib/m4/stdbool.m4 \
	$(top_srcdir)/gnulib/m4/stddef_h.m4 \
	$(top_srcdir)/gnulib/m4/stdint.m4 \
	$(top_srcdir)/gnulib/m4/stdint_h.m4 \
	$(top_srcdir)/gnulib/m4/stdio_h.m4 \
	$(top_srcdir)/gnulib/m4/stdlib_h.m4 \
	$(top_srcdir)/gnulib/m4/strcase.m4 \
	$(top_srcdir)/gnulib/m4/strerror.m4 \
	$(top_srcdir)/gnulib/m4/string_h.m4 \
	$(top_srcdir)/gnulib/m4/strings_h.m4 \
	$(top_srcdir)/gnulib/m4/sys_socket_h.m4 \
	$(top_srcdir)/gnulib/m4/sys_types_h.m4 \
	$(top_srcdir)/gnulib/m4/unistd_h.m4 \
	$(top_srcdir)/gnulib/m4/vasnprintf.m4 \
	$(top_srcdir)/gnulib/m4/vasprintf.m4 \
	$(top_srcdir)/gnulib/m4/warn-on-use.m4 \
	$(top_srcdir)/gnulib/m4/wchar_h.m4 \
	$(top_srcdir)/gnulib/m4/wchar_t.m4 \
	$(top_srcdir)/gnulib/m4/wint_t.m4 \
	$(top_srcdir)/gnulib/m4/xalloc.m4 \
	$(top_srcdir)/gnulib/m4/xsize.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = woeres.rc
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man6dir)"
PROGRAMS = $(bin_PROGRAMS)
am__TestEditorMap_SOURCES_DIST = app.cpp app.h bgm.cpp bgm.h \
	BgTilesetsManager.cpp BgTilesetsManager.h dinkini.cpp \
	dinkini.h DMod.cpp DMod.h fastfile.cpp fastfile.h str_util.cpp \
	str_util.h io_util.cpp io_util.h EditorMap.cpp EditorMap.h \
	editor_screen.cpp editor_screen.h gfx.cpp gfx.h gfx_tiles.cpp \
	gfx_tiles.h gfx_palette.cpp gfx_palette.h gfx_fonts.cpp \
	gfx_fonts.h hardness_tiles.cpp hardness_tiles.h \
	ImageLoader.cpp ImageLoader.h IOGfxDisplay.cpp IOGfxDisplay.h \
	IOGfxDisplayGL2.cpp IOGfxDisplayGL2.h IOGfxGLFuncs.cpp \
	IOGfxGLFuncs.h IOGfxDisplaySW.cpp IOGfxDisplaySW.h \
	IOGfxSurface.cpp IOGfxSurface.h IOGfxSurfaceGL2.cpp \
	IOGfxSurfaceGL2.h IOGfxSurfaceSW.cpp IOGfxSurfaceSW.h \
	IOGfxPrimitivesSW.cpp IOGfxPrimitives.h live_screen.cpp \
	live_screen.h live_sprite.cpp live_sprite.h \
	live_sprites_manager.cpp live_sprites_manager.h rect.cpp \
	rect.h resources.cpp resources.h input.cpp input.h \
	freedink_xpm.cpp freedink_xpm.h paths.cpp paths.h log.cpp \
	log.h gfx_sprites.cpp gfx_sprites.h vgasys_fon.cpp \
	vgasys_fon.h SDL_android_main.c sfx.cpp sfx.h brain.cpp \
	brain.h brain_bounce.cpp brain_button.cpp brain_diagonal.cpp \
	brain_duck.cpp brain_keyboard.cpp brain_lateral.cpp \
	brain_missile.cpp brain_mouse.cpp brain_none.cpp \
	brain_onetime.cpp brain_people.cpp brain_pig.cpp \
	brain_repeat.cpp brain_scale.cpp brain_shadow.cpp \
	brain_text.cpp dinkc_bindings.cpp dinkc_bindings.h dinkc.cpp \
	dinkc.h dinkc_console.cpp dinkc_console.h freedink.cpp \
	game_engine.cpp game_engine.h game_choice.cpp game_choice.h \
	game_state.cpp game_state.h i18n.cpp i18n.h inventory.cpp \
	inventory.h meminfo.cpp meminfo.h savegame.cpp savegame.h \
	status.cpp status.h text.cpp text.h TestEditorMap.cpp
am__objects_1 = app.$(OBJEXT) bgm.$(OBJEXT) \
	BgTilesetsManager.$(OBJEXT) dinkini.$(OBJEXT) DMod.$(OBJEXT) \
	fastfile.$(OBJEXT) str_util.$(OBJEXT) io_util.$(OBJEXT) \
	EditorMap.$(OBJEXT) editor_screen.$(OBJEXT) gfx.$(OBJEXT) \
	gfx_tiles.$(OBJEXT) gfx_palette.$(OBJEXT) gfx_fonts.$(OBJEXT) \
	hardness_tiles.$(OBJEXT) ImageLoader.$(OBJEXT) \
	IOGfxDisplay.$(OBJEXT) IOGfxDisplayGL2.$(OBJEXT) \
	IOGfxGLFuncs.$(OBJEXT) IOGfxDisplaySW.$(OBJEXT) \
	IOGfxSurface.$(OBJEXT) IOGfxSurfaceGL2.$(OBJEXT) \
	IOGfxSurfaceSW.$(OBJEXT) IOGfxPrimitivesSW.$(OBJEXT) \
	live_screen.$(OBJEXT) live_sprite.$(OBJEXT) \
	live_sprites_manager.$(OBJEXT) rect.$(OBJEXT) \
	resources.$(OBJEXT) input.$(OBJEXT) freedink_xpm.$(OBJEXT) \
	paths.$(OBJEXT) log.$(OBJEXT) gfx_sprites.$(OBJEXT) \
	vgasys_fon.$(OBJEXT) SDL_android_main.$(OBJEXT) sfx.$(OBJEXT)
@HAVE_TESTS_TRUE@am_TestEditorMap_OBJECTS = $(am__objects_1) \
@HAVE_TESTS_TRUE@	brain.$(OBJEXT) brain_bounce.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_button.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_diagonal.$(OBJEXT) brain_duck.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_keyboard.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_lateral.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_missile.$(OBJEXT) brain_mouse.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_none.$(OBJEXT) brain_onetime.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_people.$(OBJEXT) brain_pig.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_repeat.$(OBJEXT) brain_scale.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_shadow.$(OBJEXT) brain_text.$(OBJEXT) \
@HAVE_TESTS_TRUE@	dinkc_bindings.$(OBJEXT) dinkc.$(OBJEXT) \
@HAVE_TESTS_TRUE@	dinkc_console.$(OBJEXT) freedink.$(OBJEXT) \
@HAVE_TESTS_TRUE@	game_engine.$(OBJEXT) game_choice.$(OBJEXT) \
@HAVE_TESTS_TRUE@	game_state.$(OBJEXT) i18n.$(OBJEXT) \
@HAVE_TESTS_TRUE@	inventory.$(OBJEXT) meminfo.$(OBJEXT) \
@HAVE_TESTS_TRUE@	savegame.$(OBJEXT) status.$(OBJEXT) \
@HAVE_TESTS_TRUE@	text.$(OBJEXT) TestEditorMap.$(OBJEXT)
TestEditorMap_OBJECTS = $(am_TestEditorMap_OBJECTS)
TestEditorMap_LDADD = $(LDADD)
TestEditorMap_DEPENDENCIES = $(top_builddir)/gnulib/lib/libgnu.a
am__TestIOGfxDisplay_SOURCES_DIST = TestIOGfxDisplay.cpp \
	IOGfxDisplayGL2.cpp IOGfxDisplaySW.cpp IOGfxDisplay.cpp \
	IOGfxSurfaceGL2.cpp IOGfxSurfaceSW.cpp IOGfxSurface.cpp \
	IOGfxGLFuncs.cpp ImageLoader.cpp gfx_palette.cpp paths.cpp \
	io_util.cpp str_util.cpp log.cpp freedink_xpm.cpp \
	SDL_android_main.c
@HAVE_TESTS_TRUE@am_TestIOGfxDisplay_OBJECTS =  \
@HAVE_TESTS_TRUE@	TestIOGfxDisplay.$(OBJEXT) \
@HAVE_TESTS_TRUE@	IOGfxDisplayGL2.$(OBJEXT) \
@HAVE_TESTS_TRUE@	IOGfxDisplaySW.$(OBJEXT) \
@HAVE_TESTS_TRUE@	IOGfxDisplay.$(OBJEXT) \
@HAVE_TESTS_TRUE@	IOGfxSurfaceGL2.$(OBJEXT) \
@HAVE_TESTS_TRUE@	IOGfxSurfaceSW.$(OBJEXT) \
@HAVE_TESTS_TRUE@	IOGfxSurface.$(OBJEXT) IOGfxGLFuncs.$(OBJEXT) \
@HAVE_TESTS_TRUE@	ImageLoader.$(OBJEXT) gfx_palette.$(OBJEXT) \
@HAVE_TESTS_TRUE@	paths.$(OBJEXT) io_util.$(OBJEXT) \
@HAVE_TESTS_TRUE@	str_util.$(OBJEXT) log.$(OBJEXT) \
@HAVE_TESTS_TRUE@	freedink_xpm.$(OBJEXT) \
@HAVE_TESTS_TRUE@	SDL_android_main.$(OBJEXT)
TestIOGfxDisplay_OBJECTS = $(am_TestIOGfxDisplay_OBJECTS)
TestIOGfxDisplay_LDADD = $(LDADD)
TestIOGfxDisplay_DEPENDENCIES = $(top_builddir)/gnulib/lib/libgnu.a
TestIOGfxDisplay_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(TestIOGfxDisplay_LDFLAGS) $(LDFLAGS) -o $@
am__TestIOTouchDragAnywhere_SOURCES_DIST =  \
	TestIOTouchDragAnywhere.cpp IOTouchDragAnywhere.cpp
@HAVE_TESTS_TRUE@am_TestIOTouchDragAnywhere_OBJECTS =  \
@HAVE_TESTS_TRUE@	TestIOTouchDragAnywhere.$(OBJEXT) \
@HAVE_TESTS_TRUE@	IOTouchDragAnywhere.$(OBJEXT)
TestIOTouchDragAnywhere_OBJECTS =  \
	$(am_TestIOTouchDragAnywhere_OBJECTS)
TestIOTouchDragAnywhere_LDADD = $(LDADD)
TestIOTouchDragAnywhere_DEPENDENCIES =  \
	$(top_builddir)/gnulib/lib/libgnu.a
am_freedink_OBJECTS = $(am__objects_1) AppFreeDink.$(OBJEXT) \
	IOTouchDragAnywhere.$(OBJEXT) freedink.$(OBJEXT) \
	freedink_main.$(OBJEXT) update_frame.$(OBJEXT) brain.$(OBJEXT) \
	brain_bounce.$(OBJEXT) brain_button.$(OBJEXT) \
	brain_diagonal.$(OBJEXT) brain_duck.$(OBJEXT) \
	brain_keyboard.$(OBJEXT) brain_lateral.$(OBJEXT) \
	brain_missile.$(OBJEXT) brain_mouse.$(OBJEXT) \
	brain_none.$(OBJEXT) brain_onetime.$(OBJEXT) \
	brain_people.$(OBJEXT) brain_pig.$(OBJEXT) \
	brain_repeat.$(OBJEXT) brain_scale.$(OBJEXT) \
	brain_shadow.$(OBJEXT) brain_text.$(OBJEXT) \
	dinkc_bindings.$(OBJEXT) dinkc.$(OBJEXT) \
	dinkc_console.$(OBJEXT) dinkc_console_renderer.$(OBJEXT) \
	debug.$(OBJEXT) debug_renderer.$(OBJEXT) game_choice.$(OBJEXT) \
	game_choice_renderer.$(OBJEXT) game_engine.$(OBJEXT) \
	game_state.$(OBJEXT) i18n.$(OBJEXT) inventory.$(OBJEXT) \
	meminfo.$(OBJEXT) savegame.$(OBJEXT) status.$(OBJEXT) \
	text.$(OBJEXT)
@HAVE_WINDRES_TRUE@am__objects_2 = woeres.$(OBJEXT)
nodist_freedink_OBJECTS = $(am__objects_2)
freedink_OBJECTS = $(am_freedink_OBJECTS) $(nodist_freedink_OBJECTS)
freedink_LDADD = $(LDADD)
freedink_DEPENDENCIES = $(top_builddir)/gnulib/lib/libgnu.a
freedink_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(freedink_LDFLAGS) $(LDFLAGS) -o $@
am_freedinkedit_OBJECTS = $(am__objects_1) freedinkedit.$(OBJEXT)
nodist_freedinkedit_OBJECTS = $(am__objects_2)
freedinkedit_OBJECTS = $(am_freedinkedit_OBJECTS) \
	$(nodist_freedinkedit_OBJECTS)
freedinkedit_LDADD = $(LDADD)
freedinkedit_DEPENDENCIES = $(top_builddir)/gnulib/lib/libgnu.a
am__test_brain_text_SOURCES_DIST = app.cpp app.h bgm.cpp bgm.h \
	BgTilesetsManager.cpp BgTilesetsManager.h dinkini.cpp \
	dinkini.h DMod.cpp DMod.h fastfile.cpp fastfile.h str_util.cpp \
	str_util.h io_util.cpp io_util.h EditorMap.cpp EditorMap.h \
	editor_screen.cpp editor_screen.h gfx.cpp gfx.h gfx_tiles.cpp \
	gfx_tiles.h gfx_palette.cpp gfx_palette.h gfx_fonts.cpp \
	gfx_fonts.h hardness_tiles.cpp hardness_tiles.h \
	ImageLoader.cpp ImageLoader.h IOGfxDisplay.cpp IOGfxDisplay.h \
	IOGfxDisplayGL2.cpp IOGfxDisplayGL2.h IOGfxGLFuncs.cpp \
	IOGfxGLFuncs.h IOGfxDisplaySW.cpp IOGfxDisplaySW.h \
	IOGfxSurface.cpp IOGfxSurface.h IOGfxSurfaceGL2.cpp \
	IOGfxSurfaceGL2.h IOGfxSurfaceSW.cpp IOGfxSurfaceSW.h \
	IOGfxPrimitivesSW.cpp IOGfxPrimitives.h live_screen.cpp \
	live_screen.h live_sprite.cpp live_sprite.h \
	live_sprites_manager.cpp live_sprites_manager.h rect.cpp \
	rect.h resources.cpp resources.h input.cpp input.h \
	freedink_xpm.cpp freedink_xpm.h paths.cpp paths.h log.cpp \
	log.h gfx_sprites.cpp gfx_sprites.h vgasys_fon.cpp \
	vgasys_fon.h SDL_android_main.c sfx.cpp sfx.h brain.cpp \
	brain.h brain_bounce.cpp brain_button.cpp brain_diagonal.cpp \
	brain_duck.cpp brain_keyboard.cpp brain_lateral.cpp \
	brain_missile.cpp brain_mouse.cpp brain_none.cpp \
	brain_onetime.cpp brain_people.cpp brain_pig.cpp \
	brain_repeat.cpp brain_scale.cpp brain_shadow.cpp \
	brain_text.cpp dinkc_bindings.cpp dinkc_bindings.h dinkc.cpp \
	dinkc.h dinkc_console.cpp freedink.cpp game_choice.cpp \
	game_choice.h game_engine.cpp game_engine.h game_state.cpp \
	game_state.h i18n.cpp i18n.h inventory.cpp inventory.h \
	meminfo.cpp meminfo.h savegame.cpp savegame.h status.cpp \
	status.h text.cpp text.h test_brain_text.cpp
@HAVE_TESTS_TRUE@am_test_brain_text_OBJECTS = $(am__objects_1) \
@HAVE_TESTS_TRUE@	brain.$(OBJEXT) brain_bounce.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_button.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_diagonal.$(OBJEXT) brain_duck.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_keyboard.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_lateral.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_missile.$(OBJEXT) brain_mouse.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_none.$(OBJEXT) brain_onetime.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_people.$(OBJEXT) brain_pig.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_repeat.$(OBJEXT) brain_scale.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_shadow.$(OBJEXT) brain_text.$(OBJEXT) \
@HAVE_TESTS_TRUE@	dinkc_bindings.$(OBJEXT) dinkc.$(OBJEXT) \
@HAVE_TESTS_TRUE@	dinkc_console.$(OBJEXT) freedink.$(OBJEXT) \
@HAVE_TESTS_TRUE@	game_choice.$(OBJEXT) game_engine.$(OBJEXT) \
@HAVE_TESTS_TRUE@	game_state.$(OBJEXT) i18n.$(OBJEXT) \
@HAVE_TESTS_TRUE@	inventory.$(OBJEXT) meminfo.$(OBJEXT) \
@HAVE_TESTS_TRUE@	savegame.$(OBJEXT) status.$(OBJEXT) \
@HAVE_TESTS_TRUE@	text.$(OBJEXT) test_brain_text.$(OBJEXT)
test_brain_text_OBJECTS = $(am_test_brain_text_OBJECTS)
test_brain_text_LDADD = $(LDADD)
test_brain_text_DEPENDENCIES = $(top_builddir)/gnulib/lib/libgnu.a
am__test_dinkc_SOURCES_DIST = dinkc.cpp str_util.cpp paths.cpp \
	io_util.cpp i18n.cpp test_dinkc.cpp
@HAVE_TESTS_TRUE@am_test_dinkc_OBJECTS = dinkc.$(OBJEXT) \
@HAVE_TESTS_TRUE@	str_util.$(OBJEXT) paths.$(OBJEXT) \
@HAVE_TESTS_TRUE@	io_util.$(OBJEXT) i18n.$(OBJEXT) \
@HAVE_TESTS_TRUE@	test_dinkc.$(OBJEXT)
test_dinkc_OBJECTS = $(am_test_dinkc_OBJECTS)
test_dinkc_LDADD = $(LDADD)
test_dinkc_DEPENDENCIES = $(top_builddir)/gnulib/lib/libgnu.a
am__test_dinkc_bindings_SOURCES_DIST = app.cpp app.h bgm.cpp bgm.h \
	BgTilesetsManager.cpp BgTilesetsManager.h dinkini.cpp \
	dinkini.h DMod.cpp DMod.h fastfile.cpp fastfile.h str_util.cpp \
	str_util.h io_util.cpp io_util.h EditorMap.cpp EditorMap.h \
	editor_screen.cpp editor_screen.h gfx.cpp gfx.h gfx_tiles.cpp \
	gfx_tiles.h gfx_palette.cpp gfx_palette.h gfx_fonts.cpp \
	gfx_fonts.h hardness_tiles.cpp hardness_tiles.h \
	ImageLoader.cpp ImageLoader.h IOGfxDisplay.cpp IOGfxDisplay.h \
	IOGfxDisplayGL2.cpp IOGfxDisplayGL2.h IOGfxGLFuncs.cpp \
	IOGfxGLFuncs.h IOGfxDisplaySW.cpp IOGfxDisplaySW.h \
	IOGfxSurface.cpp IOGfxSurface.h IOGfxSurfaceGL2.cpp \
	IOGfxSurfaceGL2.h IOGfxSurfaceSW.cpp IOGfxSurfaceSW.h \
	IOGfxPrimitivesSW.cpp IOGfxPrimitives.h live_screen.cpp \
	live_screen.h live_sprite.cpp live_sprite.h \
	live_sprites_manager.cpp live_sprites_manager.h rect.cpp \
	rect.h resources.cpp resources.h input.cpp input.h \
	freedink_xpm.cpp freedink_xpm.h paths.cpp paths.h log.cpp \
	log.h gfx_sprites.cpp gfx_sprites.h vgasys_fon.cpp \
	vgasys_fon.h SDL_android_main.c sfx.cpp sfx.h brain.cpp \
	brain.h brain_bounce.cpp brain_button.cpp brain_diagonal.cpp \
	brain_duck.cpp brain_keyboard.cpp brain_lateral.cpp \
	brain_missile.cpp brain_mouse.cpp brain_none.cpp \
	brain_onetime.cpp brain_people.cpp brain_pig.cpp \
	brain_repeat.cpp brain_scale.cpp brain_shadow.cpp \
	brain_text.cpp dinkc_bindings.cpp dinkc_bindings.h dinkc.cpp \
	dinkc.h dinkc_console.cpp dinkc_console.h freedink.cpp \
	game_choice.cpp game_choice.h game_engine.cpp game_engine.h \
	game_state.cpp game_state.h i18n.cpp i18n.h inventory.cpp \
	inventory.h meminfo.cpp meminfo.h savegame.cpp savegame.h \
	status.cpp status.h text.cpp text.h test_dinkc_bindings.cpp
@HAVE_TESTS_TRUE@am_test_dinkc_bindings_OBJECTS = $(am__objects_1) \
@HAVE_TESTS_TRUE@	brain.$(OBJEXT) brain_bounce.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_button.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_diagonal.$(OBJEXT) brain_duck.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_keyboard.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_lateral.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_missile.$(OBJEXT) brain_mouse.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_none.$(OBJEXT) brain_onetime.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_people.$(OBJEXT) brain_pig.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_repeat.$(OBJEXT) brain_scale.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_shadow.$(OBJEXT) brain_text.$(OBJEXT) \
@HAVE_TESTS_TRUE@	dinkc_bindings.$(OBJEXT) dinkc.$(OBJEXT) \
@HAVE_TESTS_TRUE@	dinkc_console.$(OBJEXT) freedink.$(OBJEXT) \
@HAVE_TESTS_TRUE@	game_choice.$(OBJEXT) game_engine.$(OBJEXT) \
@HAVE_TESTS_TRUE@	game_state.$(OBJEXT) i18n.$(OBJEXT) \
@HAVE_TESTS_TRUE@	inventory.$(OBJEXT) meminfo.$(OBJEXT) \
@HAVE_TESTS_TRUE@	savegame.$(OBJEXT) status.$(OBJEXT) \
@HAVE_TESTS_TRUE@	text.$(OBJEXT) test_dinkc_bindings.$(OBJEXT)
test_dinkc_bindings_OBJECTS = $(am_test_dinkc_bindings_OBJECTS)
test_dinkc_bindings_LDADD = $(LDADD)
test_dinkc_bindings_DEPENDENCIES =  \
	$(top_builddir)/gnulib/lib/libgnu.a
am__test_dinkc_console_SOURCES_DIST = test_dinkc_console.cpp \
	dinkc_console.cpp str_util.cpp
@HAVE_TESTS_TRUE@am_test_dinkc_console_OBJECTS =  \
@HAVE_TESTS_TRUE@	test_dinkc_console.$(OBJEXT) \
@HAVE_TESTS_TRUE@	dinkc_console.$(OBJEXT) str_util.$(OBJEXT)
test_dinkc_console_OBJECTS = $(am_test_dinkc_console_OBJECTS)
test_dinkc_console_LDADD = $(LDADD)
test_dinkc_console_DEPENDENCIES = $(top_builddir)/gnulib/lib/libgnu.a
am__test_dinkini_SOURCES_DIST = dinkini.cpp rect.cpp gfx_sprites.cpp \
	ImageLoader.cpp fastfile.cpp str_util.cpp io_util.cpp \
	paths.cpp log.cpp test_dinkini.cpp
@HAVE_TESTS_TRUE@am_test_dinkini_OBJECTS = dinkini.$(OBJEXT) \
@HAVE_TESTS_TRUE@	rect.$(OBJEXT) gfx_sprites.$(OBJEXT) \
@HAVE_TESTS_TRUE@	ImageLoader.$(OBJEXT) fastfile.$(OBJEXT) \
@HAVE_TESTS_TRUE@	str_util.$(OBJEXT) io_util.$(OBJEXT) \
@HAVE_TESTS_TRUE@	paths.$(OBJEXT) log.$(OBJEXT) \
@HAVE_TESTS_TRUE@	test_dinkini.$(OBJEXT)
test_dinkini_OBJECTS = $(am_test_dinkini_OBJECTS)
test_dinkini_LDADD = $(LDADD)
test_dinkini_DEPENDENCIES = $(top_builddir)/gnulib/lib/libgnu.a
am__test_editor_screen_SOURCES_DIST = app.cpp app.h bgm.cpp bgm.h \
	BgTilesetsManager.cpp BgTilesetsManager.h dinkini.cpp \
	dinkini.h DMod.cpp DMod.h fastfile.cpp fastfile.h str_util.cpp \
	str_util.h io_util.cpp io_util.h EditorMap.cpp EditorMap.h \
	editor_screen.cpp editor_screen.h gfx.cpp gfx.h gfx_tiles.cpp \
	gfx_tiles.h gfx_palette.cpp gfx_palette.h gfx_fonts.cpp \
	gfx_fonts.h hardness_tiles.cpp hardness_tiles.h \
	ImageLoader.cpp ImageLoader.h IOGfxDisplay.cpp IOGfxDisplay.h \
	IOGfxDisplayGL2.cpp IOGfxDisplayGL2.h IOGfxGLFuncs.cpp \
	IOGfxGLFuncs.h IOGfxDisplaySW.cpp IOGfxDisplaySW.h \
	IOGfxSurface.cpp IOGfxSurface.h IOGfxSurfaceGL2.cpp \
	IOGfxSurfaceGL2.h IOGfxSurfaceSW.cpp IOGfxSurfaceSW.h \
	IOGfxPrimitivesSW.cpp IOGfxPrimitives.h live_screen.cpp \
	live_screen.h live_sprite.cpp live_sprite.h \
	live_sprites_manager.cpp live_sprites_manager.h rect.cpp \
	rect.h resources.cpp resources.h input.cpp input.h \
	freedink_xpm.cpp freedink_xpm.h paths.cpp paths.h log.cpp \
	log.h gfx_sprites.cpp gfx_sprites.h vgasys_fon.cpp \
	vgasys_fon.h SDL_android_main.c sfx.cpp sfx.h brain.cpp \
	brain.h brain_bounce.cpp brain_button.cpp brain_diagonal.cpp \
	brain_duck.cpp brain_keyboard.cpp brain_lateral.cpp \
	brain_missile.cpp brain_mouse.cpp brain_none.cpp \
	brain_onetime.cpp brain_people.cpp brain_pig.cpp \
	brain_repeat.cpp brain_scale.cpp brain_shadow.cpp \
	brain_text.cpp dinkc_bindings.cpp dinkc_bindings.h dinkc.cpp \
	dinkc.h dinkc_console.cpp dinkc_console.h freedink.cpp \
	game_engine.cpp game_engine.h game_choice.cpp game_choice.h \
	game_state.cpp game_state.h i18n.cpp i18n.h inventory.cpp \
	inventory.h meminfo.cpp meminfo.h savegame.cpp savegame.h \
	status.cpp status.h text.cpp text.h test_editor_screen.cpp
@HAVE_TESTS_TRUE@am_test_editor_screen_OBJECTS = $(am__objects_1) \
@HAVE_TESTS_TRUE@	brain.$(OBJEXT) brain_bounce.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_button.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_diagonal.$(OBJEXT) brain_duck.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_keyboard.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_lateral.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_missile.$(OBJEXT) brain_mouse.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_none.$(OBJEXT) brain_onetime.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_people.$(OBJEXT) brain_pig.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_repeat.$(OBJEXT) brain_scale.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_shadow.$(OBJEXT) brain_text.$(OBJEXT) \
@HAVE_TESTS_TRUE@	dinkc_bindings.$(OBJEXT) dinkc.$(OBJEXT) \
@HAVE_TESTS_TRUE@	dinkc_console.$(OBJEXT) freedink.$(OBJEXT) \
@HAVE_TESTS_TRUE@	game_engine.$(OBJEXT) game_choice.$(OBJEXT) \
@HAVE_TESTS_TRUE@	game_state.$(OBJEXT) i18n.$(OBJEXT) \
@HAVE_TESTS_TRUE@	inventory.$(OBJEXT) meminfo.$(OBJEXT) \
@HAVE_TESTS_TRUE@	savegame.$(OBJEXT) status.$(OBJEXT) \
@HAVE_TESTS_TRUE@	text.$(OBJEXT) test_editor_screen.$(OBJEXT)
test_editor_screen_OBJECTS = $(am_test_editor_screen_OBJECTS)
test_editor_screen_LDADD = $(LDADD)
test_editor_screen_DEPENDENCIES = $(top_builddir)/gnulib/lib/libgnu.a
am__test_gfx_fonts_SOURCES_DIST = test_gfx_fonts.cpp \
	test_gfx_fonts_libe.h gfx_fonts.cpp rect.cpp ImageLoader.cpp \
	str_util.cpp io_util.cpp paths.cpp resources.cpp \
	gfx_palette.cpp FakeIOGfxDisplay.cpp FakeIOGfxDisplay.h \
	IOGfxDisplay.cpp freedink_xpm.cpp
@HAVE_TESTS_TRUE@am_test_gfx_fonts_OBJECTS = test_gfx_fonts.$(OBJEXT) \
@HAVE_TESTS_TRUE@	gfx_fonts.$(OBJEXT) rect.$(OBJEXT) \
@HAVE_TESTS_TRUE@	ImageLoader.$(OBJEXT) str_util.$(OBJEXT) \
@HAVE_TESTS_TRUE@	io_util.$(OBJEXT) paths.$(OBJEXT) \
@HAVE_TESTS_TRUE@	resources.$(OBJEXT) gfx_palette.$(OBJEXT) \
@HAVE_TESTS_TRUE@	FakeIOGfxDisplay.$(OBJEXT) \
@HAVE_TESTS_TRUE@	IOGfxDisplay.$(OBJEXT) freedink_xpm.$(OBJEXT)
test_gfx_fonts_OBJECTS = $(am_test_gfx_fonts_OBJECTS)
test_gfx_fonts_LDADD = $(LDADD)
test_gfx_fonts_DEPENDENCIES = $(top_builddir)/gnulib/lib/libgnu.a
am__test_integration_SOURCES_DIST = app.cpp app.h bgm.cpp bgm.h \
	BgTilesetsManager.cpp BgTilesetsManager.h dinkini.cpp \
	dinkini.h DMod.cpp DMod.h fastfile.cpp fastfile.h str_util.cpp \
	str_util.h io_util.cpp io_util.h EditorMap.cpp EditorMap.h \
	editor_screen.cpp editor_screen.h gfx.cpp gfx.h gfx_tiles.cpp \
	gfx_tiles.h gfx_palette.cpp gfx_palette.h gfx_fonts.cpp \
	gfx_fonts.h hardness_tiles.cpp hardness_tiles.h \
	ImageLoader.cpp ImageLoader.h IOGfxDisplay.cpp IOGfxDisplay.h \
	IOGfxDisplayGL2.cpp IOGfxDisplayGL2.h IOGfxGLFuncs.cpp \
	IOGfxGLFuncs.h IOGfxDisplaySW.cpp IOGfxDisplaySW.h \
	IOGfxSurface.cpp IOGfxSurface.h IOGfxSurfaceGL2.cpp \
	IOGfxSurfaceGL2.h IOGfxSurfaceSW.cpp IOGfxSurfaceSW.h \
	IOGfxPrimitivesSW.cpp IOGfxPrimitives.h live_screen.cpp \
	live_screen.h live_sprite.cpp live_sprite.h \
	live_sprites_manager.cpp live_sprites_manager.h rect.cpp \
	rect.h resources.cpp resources.h input.cpp input.h \
	freedink_xpm.cpp freedink_xpm.h paths.cpp paths.h log.cpp \
	log.h gfx_sprites.cpp gfx_sprites.h vgasys_fon.cpp \
	vgasys_fon.h SDL_android_main.c sfx.cpp sfx.h brain.cpp \
	brain.h brain_bounce.cpp brain_button.cpp brain_diagonal.cpp \
	brain_duck.cpp brain_keyboard.cpp brain_lateral.cpp \
	brain_missile.cpp brain_mouse.cpp brain_none.cpp \
	brain_onetime.cpp brain_people.cpp brain_pig.cpp \
	brain_repeat.cpp brain_scale.cpp brain_shadow.cpp \
	brain_text.cpp dinkc_bindings.cpp dinkc_bindings.h dinkc.cpp \
	dinkc.h dinkc_console.cpp dinkc_console.h freedink.cpp \
	game_engine.cpp game_engine.h game_choice.cpp game_choice.h \
	game_state.cpp game_state.h i18n.cpp i18n.h inventory.cpp \
	inventory.h meminfo.cpp meminfo.h savegame.cpp savegame.h \
	status.cpp status.h text.cpp text.h test_integration.cpp
@HAVE_TESTS_TRUE@am_test_integration_OBJECTS = $(am__objects_1) \
@HAVE_TESTS_TRUE@	brain.$(OBJEXT) brain_bounce.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_button.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_diagonal.$(OBJEXT) brain_duck.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_keyboard.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_lateral.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_missile.$(OBJEXT) brain_mouse.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_none.$(OBJEXT) brain_onetime.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_people.$(OBJEXT) brain_pig.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_repeat.$(OBJEXT) brain_scale.$(OBJEXT) \
@HAVE_TESTS_TRUE@	brain_shadow.$(OBJEXT) brain_text.$(OBJEXT) \
@HAVE_TESTS_TRUE@	dinkc_bindings.$(OBJEXT) dinkc.$(OBJEXT) \
@HAVE_TESTS_TRUE@	dinkc_console.$(OBJEXT) freedink.$(OBJEXT) \
@HAVE_TESTS_TRUE@	game_engine.$(OBJEXT) game_choice.$(OBJEXT) \
@HAVE_TESTS_TRUE@	game_state.$(OBJEXT) i18n.$(OBJEXT) \
@HAVE_TESTS_TRUE@	inventory.$(OBJEXT) meminfo.$(OBJEXT) \
@HAVE_TESTS_TRUE@	savegame.$(OBJEXT) status.$(OBJEXT) \
@HAVE_TESTS_TRUE@	text.$(OBJEXT) test_integration.$(OBJEXT)
test_integration_OBJECTS = $(am_test_integration_OBJECTS)
test_integration_LDADD = $(LDADD)
test_integration_DEPENDENCIES = $(top_builddir)/gnulib/lib/libgnu.a
am__test_io_util_SOURCES_DIST = io_util.cpp test_io_util.cpp
@HAVE_TESTS_TRUE@am_test_io_util_OBJECTS = io_util.$(OBJEXT) \
@HAVE_TESTS_TRUE@	test_io_util.$(OBJEXT)
test_io_util_OBJECTS = $(am_test_io_util_OBJECTS)
test_io_util_LDADD = $(LDADD)
test_io_util_DEPENDENCIES = $(top_builddir)/gnulib/lib/libgnu.a
am__test_live_sprites_manager_SOURCES_DIST = live_sprites_manager.cpp \
	rect.cpp test_live_sprites_manager.cpp
@HAVE_TESTS_TRUE@am_test_live_sprites_manager_OBJECTS =  \
@HAVE_TESTS_TRUE@	live_sprites_manager.$(OBJEXT) rect.$(OBJEXT) \
@HAVE_TESTS_TRUE@	test_live_sprites_manager.$(OBJEXT)
test_live_sprites_manager_OBJECTS =  \
	$(am_test_live_sprites_manager_OBJECTS)
test_live_sprites_manager_LDADD = $(LDADD)
test_live_sprites_manager_DEPENDENCIES =  \
	$(top_builddir)/gnulib/lib/libgnu.a
am__test_str_util_SOURCES_DIST = str_util.cpp test_str_util.cpp
@HAVE_TESTS_TRUE@am_test_str_util_OBJECTS = str_util.$(OBJEXT) \
@HAVE_TESTS_TRUE@	test_str_util.$(OBJEXT)
test_str_util_OBJECTS = $(am_test_str_util_OBJECTS)
test_str_util_LDADD = $(LDADD)
test_str_util_DEPENDENCIES = $(top_builddir)/gnulib/lib/libgnu.a
am__test_text_SOURCES_DIST = test_text.cpp text.cpp \
	live_sprites_manager.cpp dinkini.cpp live_sprite.cpp rect.cpp \
	gfx_sprites.cpp ImageLoader.cpp str_util.cpp io_util.cpp \
	fastfile.cpp paths.cpp
@HAVE_TESTS_TRUE@am_test_text_OBJECTS = test_text.$(OBJEXT) \
@HAVE_TESTS_TRUE@	text.$(OBJEXT) live_sprites_manager.$(OBJEXT) \
@HAVE_TESTS_TRUE@	dinkini.$(OBJEXT) live_sprite.$(OBJEXT) \
@HAVE_TESTS_TRUE@	rect.$(OBJEXT) gfx_sprites.$(OBJEXT) \
@HAVE_TESTS_TRUE@	ImageLoader.$(OBJEXT) str_util.$(OBJEXT) \
@HAVE_TESTS_TRUE@	io_util.$(OBJEXT) fastfile.$(OBJEXT) \
@HAVE_TESTS_TRUE@	paths.$(OBJEXT)
test_text_OBJECTS = $(am_test_text_OBJECTS)
test_text_LDADD = $(LDADD)
test_text_DEPENDENCIES = $(top_builddir)/gnulib/lib/libgnu.a
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/autotools/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/AppFreeDink.Po \
	./$(DEPDIR)/BgTilesetsManager.Po ./$(DEPDIR)/DMod.Po \
	./$(DEPDIR)/EditorMap.Po ./$(DEPDIR)/FakeIOGfxDisplay.Po \
	./$(DEPDIR)/IOGfxDisplay.Po ./$(DEPDIR)/IOGfxDisplayGL2.Po \
	./$(DEPDIR)/IOGfxDisplaySW.Po ./$(DEPDIR)/IOGfxGLFuncs.Po \
	./$(DEPDIR)/IOGfxPrimitivesSW.Po ./$(DEPDIR)/IOGfxSurface.Po \
	./$(DEPDIR)/IOGfxSurfaceGL2.Po ./$(DEPDIR)/IOGfxSurfaceSW.Po \
	./$(DEPDIR)/IOTouchDragAnywhere.Po ./$(DEPDIR)/ImageLoader.Po \
	./$(DEPDIR)/SDL_android_main.Po ./$(DEPDIR)/TestEditorMap.Po \
	./$(DEPDIR)/TestIOGfxDisplay.Po \
	./$(DEPDIR)/TestIOTouchDragAnywhere.Po ./$(DEPDIR)/app.Po \
	./$(DEPDIR)/bgm.Po ./$(DEPDIR)/brain.Po \
	./$(DEPDIR)/brain_bounce.Po ./$(DEPDIR)/brain_button.Po \
	./$(DEPDIR)/brain_diagonal.Po ./$(DEPDIR)/brain_duck.Po \
	./$(DEPDIR)/brain_keyboard.Po ./$(DEPDIR)/brain_lateral.Po \
	./$(DEPDIR)/brain_missile.Po ./$(DEPDIR)/brain_mouse.Po \
	./$(DEPDIR)/brain_none.Po ./$(DEPDIR)/brain_onetime.Po \
	./$(DEPDIR)/brain_people.Po ./$(DEPDIR)/brain_pig.Po \
	./$(DEPDIR)/brain_repeat.Po ./$(DEPDIR)/brain_scale.Po \
	./$(DEPDIR)/brain_shadow.Po ./$(DEPDIR)/brain_text.Po \
	./$(DEPDIR)/debug.Po ./$(DEPDIR)/debug_renderer.Po \
	./$(DEPDIR)/dinkc.Po ./$(DEPDIR)/dinkc_bindings.Po \
	./$(DEPDIR)/dinkc_console.Po \
	./$(DEPDIR)/dinkc_console_renderer.Po ./$(DEPDIR)/dinkini.Po \
	./$(DEPDIR)/editor_screen.Po ./$(DEPDIR)/fastfile.Po \
	./$(DEPDIR)/freedink.Po ./$(DEPDIR)/freedink_main.Po \
	./$(DEPDIR)/freedink_xpm.Po ./$(DEPDIR)/freedinkedit.Po \
	./$(DEPDIR)/game_choice.Po ./$(DEPDIR)/game_choice_renderer.Po \
	./$(DEPDIR)/game_engine.Po ./$(DEPDIR)/game_state.Po \
	./$(DEPDIR)/gfx.Po ./$(DEPDIR)/gfx_fonts.Po \
	./$(DEPDIR)/gfx_palette.Po ./$(DEPDIR)/gfx_sprites.Po \
	./$(DEPDIR)/gfx_tiles.Po ./$(DEPDIR)/hardness_tiles.Po \
	./$(DEPDIR)/i18n.Po ./$(DEPDIR)/input.Po \
	./$(DEPDIR)/inventory.Po ./$(DEPDIR)/io_util.Po \
	./$(DEPDIR)/live_screen.Po ./$(DEPDIR)/live_sprite.Po \
	./$(DEPDIR)/live_sprites_manager.Po ./$(DEPDIR)/log.Po \
	./$(DEPDIR)/meminfo.Po ./$(DEPDIR)/paths.Po \
	./$(DEPDIR)/rect.Po ./$(DEPDIR)/resources.Po \
	./$(DEPDIR)/savegame.Po ./$(DEPDIR)/sfx.Po \
	./$(DEPDIR)/status.Po ./$(DEPDIR)/str_util.Po \
	./$(DEPDIR)/test_brain_text.Po ./$(DEPDIR)/test_dinkc.Po \
	./$(DEPDIR)/test_dinkc_bindings.Po \
	./$(DEPDIR)/test_dinkc_console.Po ./$(DEPDIR)/test_dinkini.Po \
	./$(DEPDIR)/test_editor_screen.Po \
	./$(DEPDIR)/test_gfx_fonts.Po ./$(DEPDIR)/test_integration.Po \
	./$(DEPDIR)/test_io_util.Po \
	./$(DEPDIR)/test_live_sprites_manager.Po \
	./$(DEPDIR)/test_str_util.Po ./$(DEPDIR)/test_text.Po \
	./$(DEPDIR)/text.Po ./$(DEPDIR)/update_frame.Po \
	./$(DEPDIR)/vgasys_fon.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(TestEditorMap_SOURCES) $(TestIOGfxDisplay_SOURCES) \
	$(TestIOTouchDragAnywhere_SOURCES) $(freedink_SOURCES) \
	$(nodist_freedink_SOURCES) $(freedinkedit_SOURCES) \
	$(nodist_freedinkedit_SOURCES) $(test_brain_text_SOURCES) \
	$(test_dinkc_SOURCES) $(test_dinkc_bindings_SOURCES) \
	$(test_dinkc_console_SOURCES) $(test_dinkini_SOURCES) \
	$(test_editor_screen_SOURCES) $(test_gfx_fonts_SOURCES) \
	$(test_integration_SOURCES) $(test_io_util_SOURCES) \
	$(test_live_sprites_manager_SOURCES) $(test_str_util_SOURCES) \
	$(test_text_SOURCES)
DIST_SOURCES = $(am__TestEditorMap_SOURCES_DIST) \
	$(am__TestIOGfxDisplay_SOURCES_DIST) \
	$(am__TestIOTouchDragAnywhere_SOURCES_DIST) \
	$(freedink_SOURCES) $(freedinkedit_SOURCES) \
	$(am__test_brain_text_SOURCES_DIST) \
	$(am__test_dinkc_SOURCES_DIST) \
	$(am__test_dinkc_bindings_SOURCES_DIST) \
	$(am__test_dinkc_console_SOURCES_DIST) \
	$(am__test_dinkini_SOURCES_DIST) \
	$(am__test_editor_screen_SOURCES_DIST) \
	$(am__test_gfx_fonts_SOURCES_DIST) \
	$(am__test_integration_SOURCES_DIST) \
	$(am__test_io_util_SOURCES_DIST) \
	$(am__test_live_sprites_manager_SOURCES_DIST) \
	$(am__test_str_util_SOURCES_DIST) \
	$(am__test_text_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
man6dir = $(mandir)/man6
NROFF = nroff
MANS = $(dist_man_MANS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/autotools/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(dist_man_MANS) $(srcdir)/Makefile.in \
	$(srcdir)/woeres.rc.in $(top_srcdir)/autotools/depcomp \
	$(top_srcdir)/autotools/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
ALLOCA_H = @ALLOCA_H@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
APPLE_UNIVERSAL_BUILD = @APPLE_UNIVERSAL_BUILD@
AR = @AR@
ARFLAGS = @ARFLAGS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BITSIZEOF_PTRDIFF_T = @BITSIZEOF_PTRDIFF_T@
BITSIZEOF_SIG_ATOMIC_T = @BITSIZEOF_SIG_ATOMIC_T@
BITSIZEOF_SIZE_T = @BITSIZEOF_SIZE_T@
BITSIZEOF_WCHAR_T = @BITSIZEOF_WCHAR_T@
BITSIZEOF_WINT_T = @BITSIZEOF_WINT_T@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXTESTGEN = @CXXTESTGEN@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EMULTIHOP_HIDDEN = @EMULTIHOP_HIDDEN@
EMULTIHOP_VALUE = @EMULTIHOP_VALUE@
ENOLINK_HIDDEN = @ENOLINK_HIDDEN@
ENOLINK_VALUE = @ENOLINK_VALUE@
EOVERFLOW_HIDDEN = @EOVERFLOW_HIDDEN@
EOVERFLOW_VALUE = @EOVERFLOW_VALUE@
ERRNO_H = @ERRNO_H@
EXEEXT = @EXEEXT@
FLOAT_H = @FLOAT_H@
FONTCONFIG_CFLAGS = @FONTCONFIG_CFLAGS@
FONTCONFIG_LIBS = @FONTCONFIG_LIBS@
GETOPT_H = @GETOPT_H@
GETTEXT_MACRO_VERSION = @GETTEXT_MACRO_VERSION@
GMSGFMT = @GMSGFMT@
GMSGFMT_015 = @GMSGFMT_015@
GNULIB_ATOLL = @GNULIB_ATOLL@
GNULIB_BTOWC = @GNULIB_BTOWC@
GNULIB_CALLOC_POSIX = @GNULIB_CALLOC_POSIX@
GNULIB_CANONICALIZE_FILE_NAME = @GNULIB_CANONICALIZE_FILE_NAME@
GNULIB_CHDIR = @GNULIB_CHDIR@
GNULIB_CHOWN = @GNULIB_CHOWN@
GNULIB_CLOSE = @GNULIB_CLOSE@
GNULIB_DPRINTF = @GNULIB_DPRINTF@
GNULIB_DUP = @GNULIB_DUP@
GNULIB_DUP2 = @GNULIB_DUP2@
GNULIB_DUP3 = @GNULIB_DUP3@
GNULIB_ENVIRON = @GNULIB_ENVIRON@
GNULIB_EUIDACCESS = @GNULIB_EUIDACCESS@
GNULIB_FACCESSAT = @GNULIB_FACCESSAT@
GNULIB_FCHDIR = @GNULIB_FCHDIR@
GNULIB_FCHOWNAT = @GNULIB_FCHOWNAT@
GNULIB_FCLOSE = @GNULIB_FCLOSE@
GNULIB_FDATASYNC = @GNULIB_FDATASYNC@
GNULIB_FDOPEN = @GNULIB_FDOPEN@
GNULIB_FFLUSH = @GNULIB_FFLUSH@
GNULIB_FFS = @GNULIB_FFS@
GNULIB_FFSL = @GNULIB_FFSL@
GNULIB_FFSLL = @GNULIB_FFSLL@
GNULIB_FGETC = @GNULIB_FGETC@
GNULIB_FGETS = @GNULIB_FGETS@
GNULIB_FOPEN = @GNULIB_FOPEN@
GNULIB_FPRINTF = @GNULIB_FPRINTF@
GNULIB_FPRINTF_POSIX = @GNULIB_FPRINTF_POSIX@
GNULIB_FPURGE = @GNULIB_FPURGE@
GNULIB_FPUTC = @GNULIB_FPUTC@
GNULIB_FPUTS = @GNULIB_FPUTS@
GNULIB_FREAD = @GNULIB_FREAD@
GNULIB_FREOPEN = @GNULIB_FREOPEN@
GNULIB_FSCANF = @GNULIB_FSCANF@
GNULIB_FSEEK = @GNULIB_FSEEK@
GNULIB_FSEEKO = @GNULIB_FSEEKO@
GNULIB_FSYNC = @GNULIB_FSYNC@
GNULIB_FTELL = @GNULIB_FTELL@
GNULIB_FTELLO = @GNULIB_FTELLO@
GNULIB_FTRUNCATE = @GNULIB_FTRUNCATE@
GNULIB_FWRITE = @GNULIB_FWRITE@
GNULIB_GETC = @GNULIB_GETC@
GNULIB_GETCHAR = @GNULIB_GETCHAR@
GNULIB_GETCWD = @GNULIB_GETCWD@
GNULIB_GETDELIM = @GNULIB_GETDELIM@
GNULIB_GETDOMAINNAME = @GNULIB_GETDOMAINNAME@
GNULIB_GETDTABLESIZE = @GNULIB_GETDTABLESIZE@
GNULIB_GETGROUPS = @GNULIB_GETGROUPS@
GNULIB_GETHOSTNAME = @GNULIB_GETHOSTNAME@
GNULIB_GETLINE = @GNULIB_GETLINE@
GNULIB_GETLOADAVG = @GNULIB_GETLOADAVG@
GNULIB_GETLOGIN = @GNULIB_GETLOGIN@
GNULIB_GETLOGIN_R = @GNULIB_GETLOGIN_R@
GNULIB_GETPAGESIZE = @GNULIB_GETPAGESIZE@
GNULIB_GETSUBOPT = @GNULIB_GETSUBOPT@
GNULIB_GETUSERSHELL = @GNULIB_GETUSERSHELL@
GNULIB_GL_UNISTD_H_GETOPT = @GNULIB_GL_UNISTD_H_GETOPT@
GNULIB_GRANTPT = @GNULIB_GRANTPT@
GNULIB_GROUP_MEMBER = @GNULIB_GROUP_MEMBER@
GNULIB_ISATTY = @GNULIB_ISATTY@
GNULIB_LCHOWN = @GNULIB_LCHOWN@
GNULIB_LINK = @GNULIB_LINK@
GNULIB_LINKAT = @GNULIB_LINKAT@
GNULIB_LSEEK = @GNULIB_LSEEK@
GNULIB_MALLOC_POSIX = @GNULIB_MALLOC_POSIX@
GNULIB_MBRLEN = @GNULIB_MBRLEN@
GNULIB_MBRTOWC = @GNULIB_MBRTOWC@
GNULIB_MBSCASECMP = @GNULIB_MBSCASECMP@
GNULIB_MBSCASESTR = @GNULIB_MBSCASESTR@
GNULIB_MBSCHR = @GNULIB_MBSCHR@
GNULIB_MBSCSPN = @GNULIB_MBSCSPN@
GNULIB_MBSINIT = @GNULIB_MBSINIT@
GNULIB_MBSLEN = @GNULIB_MBSLEN@
GNULIB_MBSNCASECMP = @GNULIB_MBSNCASECMP@
GNULIB_MBSNLEN = @GNULIB_MBSNLEN@
GNULIB_MBSNRTOWCS = @GNULIB_MBSNRTOWCS@
GNULIB_MBSPBRK = @GNULIB_MBSPBRK@
GNULIB_MBSPCASECMP = @GNULIB_MBSPCASECMP@
GNULIB_MBSRCHR = @GNULIB_MBSRCHR@
GNULIB_MBSRTOWCS = @GNULIB_MBSRTOWCS@
GNULIB_MBSSEP = @GNULIB_MBSSEP@
GNULIB_MBSSPN = @GNULIB_MBSSPN@
GNULIB_MBSSTR = @GNULIB_MBSSTR@
GNULIB_MBSTOK_R = @GNULIB_MBSTOK_R@
GNULIB_MBTOWC = @GNULIB_MBTOWC@
GNULIB_MEMCHR = @GNULIB_MEMCHR@
GNULIB_MEMMEM = @GNULIB_MEMMEM@
GNULIB_MEMPCPY = @GNULIB_MEMPCPY@
GNULIB_MEMRCHR = @GNULIB_MEMRCHR@
GNULIB_MKDTEMP = @GNULIB_MKDTEMP@
GNULIB_MKOSTEMP = @GNULIB_MKOSTEMP@
GNULIB_MKOSTEMPS = @GNULIB_MKOSTEMPS@
GNULIB_MKSTEMP = @GNULIB_MKSTEMP@
GNULIB_MKSTEMPS = @GNULIB_MKSTEMPS@
GNULIB_OBSTACK_PRINTF = @GNULIB_OBSTACK_PRINTF@
GNULIB_OBSTACK_PRINTF_POSIX = @GNULIB_OBSTACK_PRINTF_POSIX@
GNULIB_PCLOSE = @GNULIB_PCLOSE@
GNULIB_PERROR = @GNULIB_PERROR@
GNULIB_PIPE = @GNULIB_PIPE@
GNULIB_PIPE2 = @GNULIB_PIPE2@
GNULIB_POPEN = @GNULIB_POPEN@
GNULIB_POSIX_OPENPT = @GNULIB_POSIX_OPENPT@
GNULIB_PREAD = @GNULIB_PREAD@
GNULIB_PRINTF = @GNULIB_PRINTF@
GNULIB_PRINTF_POSIX = @GNULIB_PRINTF_POSIX@
GNULIB_PTSNAME = @GNULIB_PTSNAME@
GNULIB_PTSNAME_R = @GNULIB_PTSNAME_R@
GNULIB_PUTC = @GNULIB_PUTC@
GNULIB_PUTCHAR = @GNULIB_PUTCHAR@
GNULIB_PUTENV = @GNULIB_PUTENV@
GNULIB_PUTS = @GNULIB_PUTS@
GNULIB_PWRITE = @GNULIB_PWRITE@
GNULIB_RANDOM = @GNULIB_RANDOM@
GNULIB_RANDOM_R = @GNULIB_RANDOM_R@
GNULIB_RAWMEMCHR = @GNULIB_RAWMEMCHR@
GNULIB_READ = @GNULIB_READ@
GNULIB_READLINK = @GNULIB_READLINK@
GNULIB_READLINKAT = @GNULIB_READLINKAT@
GNULIB_REALLOC_POSIX = @GNULIB_REALLOC_POSIX@
GNULIB_REALPATH = @GNULIB_REALPATH@
GNULIB_REMOVE = @GNULIB_REMOVE@
GNULIB_RENAME = @GNULIB_RENAME@
GNULIB_RENAMEAT = @GNULIB_RENAMEAT@
GNULIB_RMDIR = @GNULIB_RMDIR@
GNULIB_RPMATCH = @GNULIB_RPMATCH@
GNULIB_SCANF = @GNULIB_SCANF@
GNULIB_SECURE_GETENV = @GNULIB_SECURE_GETENV@
GNULIB_SETENV = @GNULIB_SETENV@
GNULIB_SETHOSTNAME = @GNULIB_SETHOSTNAME@
GNULIB_SLEEP = @GNULIB_SLEEP@
GNULIB_SNPRINTF = @GNULIB_SNPRINTF@
GNULIB_SPRINTF_POSIX = @GNULIB_SPRINTF_POSIX@
GNULIB_STDIO_H_NONBLOCKING = @GNULIB_STDIO_H_NONBLOCKING@
GNULIB_STDIO_H_SIGPIPE = @GNULIB_STDIO_H_SIGPIPE@
GNULIB_STPCPY = @GNULIB_STPCPY@
GNULIB_STPNCPY = @GNULIB_STPNCPY@
GNULIB_STRCASESTR = @GNULIB_STRCASESTR@
GNULIB_STRCHRNUL = @GNULIB_STRCHRNUL@
GNULIB_STRDUP = @GNULIB_STRDUP@
GNULIB_STRERROR = @GNULIB_STRERROR@
GNULIB_STRERROR_R = @GNULIB_STRERROR_R@
GNULIB_STRNCAT = @GNULIB_STRNCAT@
GNULIB_STRNDUP = @GNULIB_STRNDUP@
GNULIB_STRNLEN = @GNULIB_STRNLEN@
GNULIB_STRPBRK = @GNULIB_STRPBRK@
GNULIB_STRSEP = @GNULIB_STRSEP@
GNULIB_STRSIGNAL = @GNULIB_STRSIGNAL@
GNULIB_STRSTR = @GNULIB_STRSTR@
GNULIB_STRTOD = @GNULIB_STRTOD@
GNULIB_STRTOK_R = @GNULIB_STRTOK_R@
GNULIB_STRTOLL = @GNULIB_STRTOLL@
GNULIB_STRTOULL = @GNULIB_STRTOULL@
GNULIB_STRVERSCMP = @GNULIB_STRVERSCMP@
GNULIB_SYMLINK = @GNULIB_SYMLINK@
GNULIB_SYMLINKAT = @GNULIB_SYMLINKAT@
GNULIB_SYSTEM_POSIX = @GNULIB_SYSTEM_POSIX@
GNULIB_TMPFILE = @GNULIB_TMPFILE@
GNULIB_TTYNAME_R = @GNULIB_TTYNAME_R@
GNULIB_UNISTD_H_NONBLOCKING = @GNULIB_UNISTD_H_NONBLOCKING@
GNULIB_UNISTD_H_SIGPIPE = @GNULIB_UNISTD_H_SIGPIPE@
GNULIB_UNLINK = @GNULIB_UNLINK@
GNULIB_UNLINKAT = @GNULIB_UNLINKAT@
GNULIB_UNLOCKPT = @GNULIB_UNLOCKPT@
GNULIB_UNSETENV = @GNULIB_UNSETENV@
GNULIB_USLEEP = @GNULIB_USLEEP@
GNULIB_VASPRINTF = @GNULIB_VASPRINTF@
GNULIB_VDPRINTF = @GNULIB_VDPRINTF@
GNULIB_VFPRINTF = @GNULIB_VFPRINTF@
GNULIB_VFPRINTF_POSIX = @GNULIB_VFPRINTF_POSIX@
GNULIB_VFSCANF = @GNULIB_VFSCANF@
GNULIB_VPRINTF = @GNULIB_VPRINTF@
GNULIB_VPRINTF_POSIX = @GNULIB_VPRINTF_POSIX@
GNULIB_VSCANF = @GNULIB_VSCANF@
GNULIB_VSNPRINTF = @GNULIB_VSNPRINTF@
GNULIB_VSPRINTF_POSIX = @GNULIB_VSPRINTF_POSIX@
GNULIB_WCPCPY = @GNULIB_WCPCPY@
GNULIB_WCPNCPY = @GNULIB_WCPNCPY@
GNULIB_WCRTOMB = @GNULIB_WCRTOMB@
GNULIB_WCSCASECMP = @GNULIB_WCSCASECMP@
GNULIB_WCSCAT = @GNULIB_WCSCAT@
GNULIB_WCSCHR = @GNULIB_WCSCHR@
GNULIB_WCSCMP = @GNULIB_WCSCMP@
GNULIB_WCSCOLL = @GNULIB_WCSCOLL@
GNULIB_WCSCPY = @GNULIB_WCSCPY@
GNULIB_WCSCSPN = @GNULIB_WCSCSPN@
GNULIB_WCSDUP = @GNULIB_WCSDUP@
GNULIB_WCSLEN = @GNULIB_WCSLEN@
GNULIB_WCSNCASECMP = @GNULIB_WCSNCASECMP@
GNULIB_WCSNCAT = @GNULIB_WCSNCAT@
GNULIB_WCSNCMP = @GNULIB_WCSNCMP@
GNULIB_WCSNCPY = @GNULIB_WCSNCPY@
GNULIB_WCSNLEN = @GNULIB_WCSNLEN@
GNULIB_WCSNRTOMBS = @GNULIB_WCSNRTOMBS@
GNULIB_WCSPBRK = @GNULIB_WCSPBRK@
GNULIB_WCSRCHR = @GNULIB_WCSRCHR@
GNULIB_WCSRTOMBS = @GNULIB_WCSRTOMBS@
GNULIB_WCSSPN = @GNULIB_WCSSPN@
GNULIB_WCSSTR = @GNULIB_WCSSTR@
GNULIB_WCSTOK = @GNULIB_WCSTOK@
GNULIB_WCSWIDTH = @GNULIB_WCSWIDTH@
GNULIB_WCSXFRM = @GNULIB_WCSXFRM@
GNULIB_WCTOB = @GNULIB_WCTOB@
GNULIB_WCTOMB = @GNULIB_WCTOMB@
GNULIB_WCWIDTH = @GNULIB_WCWIDTH@
GNULIB_WMEMCHR = @GNULIB_WMEMCHR@
GNULIB_WMEMCMP = @GNULIB_WMEMCMP@
GNULIB_WMEMCPY = @GNULIB_WMEMCPY@
GNULIB_WMEMMOVE = @GNULIB_WMEMMOVE@
GNULIB_WMEMSET = @GNULIB_WMEMSET@
GNULIB_WRITE = @GNULIB_WRITE@
GNULIB__EXIT = @GNULIB__EXIT@
GREP = @GREP@
HAVE_ATOLL = @HAVE_ATOLL@
HAVE_BTOWC = @HAVE_BTOWC@
HAVE_CANONICALIZE_FILE_NAME = @HAVE_CANONICALIZE_FILE_NAME@
HAVE_CHOWN = @HAVE_CHOWN@
HAVE_DECL_ENVIRON = @HAVE_DECL_ENVIRON@
HAVE_DECL_FCHDIR = @HAVE_DECL_FCHDIR@
HAVE_DECL_FDATASYNC = @HAVE_DECL_FDATASYNC@
HAVE_DECL_FPURGE = @HAVE_DECL_FPURGE@
HAVE_DECL_FSEEKO = @HAVE_DECL_FSEEKO@
HAVE_DECL_FTELLO = @HAVE_DECL_FTELLO@
HAVE_DECL_GETDELIM = @HAVE_DECL_GETDELIM@
HAVE_DECL_GETDOMAINNAME = @HAVE_DECL_GETDOMAINNAME@
HAVE_DECL_GETLINE = @HAVE_DECL_GETLINE@
HAVE_DECL_GETLOADAVG = @HAVE_DECL_GETLOADAVG@
HAVE_DECL_GETLOGIN_R = @HAVE_DECL_GETLOGIN_R@
HAVE_DECL_GETPAGESIZE = @HAVE_DECL_GETPAGESIZE@
HAVE_DECL_GETUSERSHELL = @HAVE_DECL_GETUSERSHELL@
HAVE_DECL_MEMMEM = @HAVE_DECL_MEMMEM@
HAVE_DECL_MEMRCHR = @HAVE_DECL_MEMRCHR@
HAVE_DECL_OBSTACK_PRINTF = @HAVE_DECL_OBSTACK_PRINTF@
HAVE_DECL_SETENV = @HAVE_DECL_SETENV@
HAVE_DECL_SETHOSTNAME = @HAVE_DECL_SETHOSTNAME@
HAVE_DECL_SNPRINTF = @HAVE_DECL_SNPRINTF@
HAVE_DECL_STRDUP = @HAVE_DECL_STRDUP@
HAVE_DECL_STRERROR_R = @HAVE_DECL_STRERROR_R@
HAVE_DECL_STRNCASECMP = @HAVE_DECL_STRNCASECMP@
HAVE_DECL_STRNDUP = @HAVE_DECL_STRNDUP@
HAVE_DECL_STRNLEN = @HAVE_DECL_STRNLEN@
HAVE_DECL_STRSIGNAL = @HAVE_DECL_STRSIGNAL@
HAVE_DECL_STRTOK_R = @HAVE_DECL_STRTOK_R@
HAVE_DECL_TTYNAME_R = @HAVE_DECL_TTYNAME_R@
HAVE_DECL_UNSETENV = @HAVE_DECL_UNSETENV@
HAVE_DECL_VSNPRINTF = @HAVE_DECL_VSNPRINTF@
HAVE_DECL_WCTOB = @HAVE_DECL_WCTOB@
HAVE_DECL_WCWIDTH = @HAVE_DECL_WCWIDTH@
HAVE_DPRINTF = @HAVE_DPRINTF@
HAVE_DUP2 = @HAVE_DUP2@
HAVE_DUP3 = @HAVE_DUP3@
HAVE_EUIDACCESS = @HAVE_EUIDACCESS@
HAVE_FACCESSAT = @HAVE_FACCESSAT@
HAVE_FCHDIR = @HAVE_FCHDIR@
HAVE_FCHOWNAT = @HAVE_FCHOWNAT@
HAVE_FDATASYNC = @HAVE_FDATASYNC@
HAVE_FEATURES_H = @HAVE_FEATURES_H@
HAVE_FFS = @HAVE_FFS@
HAVE_FFSL = @HAVE_FFSL@
HAVE_FFSLL = @HAVE_FFSLL@
HAVE_FSEEKO = @HAVE_FSEEKO@
HAVE_FSYNC = @HAVE_FSYNC@
HAVE_FTELLO = @HAVE_FTELLO@
HAVE_FTRUNCATE = @HAVE_FTRUNCATE@
HAVE_GETDTABLESIZE = @HAVE_GETDTABLESIZE@
HAVE_GETGROUPS = @HAVE_GETGROUPS@
HAVE_GETHOSTNAME = @HAVE_GETHOSTNAME@
HAVE_GETLOGIN = @HAVE_GETLOGIN@
HAVE_GETOPT_H = @HAVE_GETOPT_H@
HAVE_GETPAGESIZE = @HAVE_GETPAGESIZE@
HAVE_GETSUBOPT = @HAVE_GETSUBOPT@
HAVE_GRANTPT = @HAVE_GRANTPT@
HAVE_GROUP_MEMBER = @HAVE_GROUP_MEMBER@
HAVE_INTTYPES_H = @HAVE_INTTYPES_H@
HAVE_LCHOWN = @HAVE_LCHOWN@
HAVE_LINK = @HAVE_LINK@
HAVE_LINKAT = @HAVE_LINKAT@
HAVE_LONG_LONG_INT = @HAVE_LONG_LONG_INT@
HAVE_MBRLEN = @HAVE_MBRLEN@
HAVE_MBRTOWC = @HAVE_MBRTOWC@
HAVE_MBSINIT = @HAVE_MBSINIT@
HAVE_MBSLEN = @HAVE_MBSLEN@
HAVE_MBSNRTOWCS = @HAVE_MBSNRTOWCS@
HAVE_MBSRTOWCS = @HAVE_MBSRTOWCS@
HAVE_MEMCHR = @HAVE_MEMCHR@
HAVE_MEMPCPY = @HAVE_MEMPCPY@
HAVE_MKDTEMP = @HAVE_MKDTEMP@
HAVE_MKOSTEMP = @HAVE_MKOSTEMP@
HAVE_MKOSTEMPS = @HAVE_MKOSTEMPS@
HAVE_MKSTEMP = @HAVE_MKSTEMP@
HAVE_MKSTEMPS = @HAVE_MKSTEMPS@
HAVE_MSVC_INVALID_PARAMETER_HANDLER = @HAVE_MSVC_INVALID_PARAMETER_HANDLER@
HAVE_OS_H = @HAVE_OS_H@
HAVE_PCLOSE = @HAVE_PCLOSE@
HAVE_PIPE = @HAVE_PIPE@
HAVE_PIPE2 = @HAVE_PIPE2@
HAVE_POPEN = @HAVE_POPEN@
HAVE_POSIX_OPENPT = @HAVE_POSIX_OPENPT@
HAVE_PREAD = @HAVE_PREAD@
HAVE_PTSNAME = @HAVE_PTSNAME@
HAVE_PTSNAME_R = @HAVE_PTSNAME_R@
HAVE_PWRITE = @HAVE_PWRITE@
HAVE_RANDOM = @HAVE_RANDOM@
HAVE_RANDOM_H = @HAVE_RANDOM_H@
HAVE_RANDOM_R = @HAVE_RANDOM_R@
HAVE_RAWMEMCHR = @HAVE_RAWMEMCHR@
HAVE_READLINK = @HAVE_READLINK@
HAVE_READLINKAT = @HAVE_READLINKAT@
HAVE_REALPATH = @HAVE_REALPATH@
HAVE_RENAMEAT = @HAVE_RENAMEAT@
HAVE_RPMATCH = @HAVE_RPMATCH@
HAVE_SECURE_GETENV = @HAVE_SECURE_GETENV@
HAVE_SETENV = @HAVE_SETENV@
HAVE_SETHOSTNAME = @HAVE_SETHOSTNAME@
HAVE_SIGNED_SIG_ATOMIC_T = @HAVE_SIGNED_SIG_ATOMIC_T@
HAVE_SIGNED_WCHAR_T = @HAVE_SIGNED_WCHAR_T@
HAVE_SIGNED_WINT_T = @HAVE_SIGNED_WINT_T@
HAVE_SLEEP = @HAVE_SLEEP@
HAVE_STDINT_H = @HAVE_STDINT_H@
HAVE_STPCPY = @HAVE_STPCPY@
HAVE_STPNCPY = @HAVE_STPNCPY@
HAVE_STRCASECMP = @HAVE_STRCASECMP@
HAVE_STRCASESTR = @HAVE_STRCASESTR@
HAVE_STRCHRNUL = @HAVE_STRCHRNUL@
HAVE_STRINGS_H = @HAVE_STRINGS_H@
HAVE_STRPBRK = @HAVE_STRPBRK@
HAVE_STRSEP = @HAVE_STRSEP@
HAVE_STRTOD = @HAVE_STRTOD@
HAVE_STRTOLL = @HAVE_STRTOLL@
HAVE_STRTOULL = @HAVE_STRTOULL@
HAVE_STRUCT_RANDOM_DATA = @HAVE_STRUCT_RANDOM_DATA@
HAVE_STRVERSCMP = @HAVE_STRVERSCMP@
HAVE_SYMLINK = @HAVE_SYMLINK@
HAVE_SYMLINKAT = @HAVE_SYMLINKAT@
HAVE_SYS_BITYPES_H = @HAVE_SYS_BITYPES_H@
HAVE_SYS_INTTYPES_H = @HAVE_SYS_INTTYPES_H@
HAVE_SYS_LOADAVG_H = @HAVE_SYS_LOADAVG_H@
HAVE_SYS_PARAM_H = @HAVE_SYS_PARAM_H@
HAVE_SYS_TYPES_H = @HAVE_SYS_TYPES_H@
HAVE_UNISTD_H = @HAVE_UNISTD_H@
HAVE_UNLINKAT = @HAVE_UNLINKAT@
HAVE_UNLOCKPT = @HAVE_UNLOCKPT@
HAVE_UNSIGNED_LONG_LONG_INT = @HAVE_UNSIGNED_LONG_LONG_INT@
HAVE_USLEEP = @HAVE_USLEEP@
HAVE_VASPRINTF = @HAVE_VASPRINTF@
HAVE_VDPRINTF = @HAVE_VDPRINTF@
HAVE_WCHAR_H = @HAVE_WCHAR_H@
HAVE_WCHAR_T = @HAVE_WCHAR_T@
HAVE_WCPCPY = @HAVE_WCPCPY@
HAVE_WCPNCPY = @HAVE_WCPNCPY@
HAVE_WCRTOMB = @HAVE_WCRTOMB@
HAVE_WCSCASECMP = @HAVE_WCSCASECMP@
HAVE_WCSCAT = @HAVE_WCSCAT@
HAVE_WCSCHR = @HAVE_WCSCHR@
HAVE_WCSCMP = @HAVE_WCSCMP@
HAVE_WCSCOLL = @HAVE_WCSCOLL@
HAVE_WCSCPY = @HAVE_WCSCPY@
HAVE_WCSCSPN = @HAVE_WCSCSPN@
HAVE_WCSDUP = @HAVE_WCSDUP@
HAVE_WCSLEN = @HAVE_WCSLEN@
HAVE_WCSNCASECMP = @HAVE_WCSNCASECMP@
HAVE_WCSNCAT = @HAVE_WCSNCAT@
HAVE_WCSNCMP = @HAVE_WCSNCMP@
HAVE_WCSNCPY = @HAVE_WCSNCPY@
HAVE_WCSNLEN = @HAVE_WCSNLEN@
HAVE_WCSNRTOMBS = @HAVE_WCSNRTOMBS@
HAVE_WCSPBRK = @HAVE_WCSPBRK@
HAVE_WCSRCHR = @HAVE_WCSRCHR@
HAVE_WCSRTOMBS = @HAVE_WCSRTOMBS@
HAVE_WCSSPN = @HAVE_WCSSPN@
HAVE_WCSSTR = @HAVE_WCSSTR@
HAVE_WCSTOK = @HAVE_WCSTOK@
HAVE_WCSWIDTH = @HAVE_WCSWIDTH@
HAVE_WCSXFRM = @HAVE_WCSXFRM@
HAVE_WINSOCK2_H = @HAVE_WINSOCK2_H@
HAVE_WINT_T = @HAVE_WINT_T@
HAVE_WMEMCHR = @HAVE_WMEMCHR@
HAVE_WMEMCMP = @HAVE_WMEMCMP@
HAVE_WMEMCPY = @HAVE_WMEMCPY@
HAVE_WMEMMOVE = @HAVE_WMEMMOVE@
HAVE_WMEMSET = @HAVE_WMEMSET@
HAVE__BOOL = @HAVE__BOOL@
HAVE__EXIT = @HAVE__EXIT@
HELP2MAN = @HELP2MAN@
INCLUDE_NEXT = @INCLUDE_NEXT@
INCLUDE_NEXT_AS_FIRST_DIRECTIVE = @INCLUDE_NEXT_AS_FIRST_DIRECTIVE@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INTLLIBS = @INTLLIBS@
INTL_MACOSX_LIBS = @INTL_MACOSX_LIBS@
LDFLAGS = @LDFLAGS@
LIBGNU_LIBDEPS = @LIBGNU_LIBDEPS@
LIBGNU_LTLIBDEPS = @LIBGNU_LTLIBDEPS@
LIBICONV = @LIBICONV@
LIBINTL = @LIBINTL@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@ -lm $(am__append_4)
LN_S = @LN_S@
LTLIBICONV = @LTLIBICONV@
LTLIBINTL = @LTLIBINTL@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MSGFMT = @MSGFMT@
MSGFMT_015 = @MSGFMT_015@
MSGMERGE = @MSGMERGE@
NEXT_AS_FIRST_DIRECTIVE_ERRNO_H = @NEXT_AS_FIRST_DIRECTIVE_ERRNO_H@
NEXT_AS_FIRST_DIRECTIVE_FLOAT_H = @NEXT_AS_FIRST_DIRECTIVE_FLOAT_H@
NEXT_AS_FIRST_DIRECTIVE_GETOPT_H = @NEXT_AS_FIRST_DIRECTIVE_GETOPT_H@
NEXT_AS_FIRST_DIRECTIVE_STDDEF_H = @NEXT_AS_FIRST_DIRECTIVE_STDDEF_H@
NEXT_AS_FIRST_DIRECTIVE_STDINT_H = @NEXT_AS_FIRST_DIRECTIVE_STDINT_H@
NEXT_AS_FIRST_DIRECTIVE_STDIO_H = @NEXT_AS_FIRST_DIRECTIVE_STDIO_H@
NEXT_AS_FIRST_DIRECTIVE_STDLIB_H = @NEXT_AS_FIRST_DIRECTIVE_STDLIB_H@
NEXT_AS_FIRST_DIRECTIVE_STRINGS_H = @NEXT_AS_FIRST_DIRECTIVE_STRINGS_H@
NEXT_AS_FIRST_DIRECTIVE_STRING_H = @NEXT_AS_FIRST_DIRECTIVE_STRING_H@
NEXT_AS_FIRST_DIRECTIVE_SYS_TYPES_H = @NEXT_AS_FIRST_DIRECTIVE_SYS_TYPES_H@
NEXT_AS_FIRST_DIRECTIVE_UNISTD_H = @NEXT_AS_FIRST_DIRECTIVE_UNISTD_H@
NEXT_AS_FIRST_DIRECTIVE_WCHAR_H = @NEXT_AS_FIRST_DIRECTIVE_WCHAR_H@
NEXT_ERRNO_H = @NEXT_ERRNO_H@
NEXT_FLOAT_H = @NEXT_FLOAT_H@
NEXT_GETOPT_H = @NEXT_GETOPT_H@
NEXT_STDDEF_H = @NEXT_STDDEF_H@
NEXT_STDINT_H = @NEXT_STDINT_H@
NEXT_STDIO_H = @NEXT_STDIO_H@
NEXT_STDLIB_H = @NEXT_STDLIB_H@
NEXT_STRINGS_H = @NEXT_STRINGS_H@
NEXT_STRING_H = @NEXT_STRING_H@
NEXT_SYS_TYPES_H = @NEXT_SYS_TYPES_H@
NEXT_UNISTD_H = @NEXT_UNISTD_H@
NEXT_WCHAR_H = @NEXT_WCHAR_H@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
POSUB = @POSUB@
PRAGMA_COLUMNS = @PRAGMA_COLUMNS@
PRAGMA_SYSTEM_HEADER = @PRAGMA_SYSTEM_HEADER@
PTRDIFF_T_SUFFIX = @PTRDIFF_T_SUFFIX@
RANLIB = @RANLIB@
REPLACE_BTOWC = @REPLACE_BTOWC@
REPLACE_CALLOC = @REPLACE_CALLOC@
REPLACE_CANONICALIZE_FILE_NAME = @REPLACE_CANONICALIZE_FILE_NAME@
REPLACE_CHOWN = @REPLACE_CHOWN@
REPLACE_CLOSE = @REPLACE_CLOSE@
REPLACE_DPRINTF = @REPLACE_DPRINTF@
REPLACE_DUP = @REPLACE_DUP@
REPLACE_DUP2 = @REPLACE_DUP2@
REPLACE_FCHOWNAT = @REPLACE_FCHOWNAT@
REPLACE_FCLOSE = @REPLACE_FCLOSE@
REPLACE_FDOPEN = @REPLACE_FDOPEN@
REPLACE_FFLUSH = @REPLACE_FFLUSH@
REPLACE_FOPEN = @REPLACE_FOPEN@
REPLACE_FPRINTF = @REPLACE_FPRINTF@
REPLACE_FPURGE = @REPLACE_FPURGE@
REPLACE_FREOPEN = @REPLACE_FREOPEN@
REPLACE_FSEEK = @REPLACE_FSEEK@
REPLACE_FSEEKO = @REPLACE_FSEEKO@
REPLACE_FTELL = @REPLACE_FTELL@
REPLACE_FTELLO = @REPLACE_FTELLO@
REPLACE_FTRUNCATE = @REPLACE_FTRUNCATE@
REPLACE_GETCWD = @REPLACE_GETCWD@
REPLACE_GETDELIM = @REPLACE_GETDELIM@
REPLACE_GETDOMAINNAME = @REPLACE_GETDOMAINNAME@
REPLACE_GETDTABLESIZE = @REPLACE_GETDTABLESIZE@
REPLACE_GETGROUPS = @REPLACE_GETGROUPS@
REPLACE_GETLINE = @REPLACE_GETLINE@
REPLACE_GETLOGIN_R = @REPLACE_GETLOGIN_R@
REPLACE_GETPAGESIZE = @REPLACE_GETPAGESIZE@
REPLACE_ISATTY = @REPLACE_ISATTY@
REPLACE_ITOLD = @REPLACE_ITOLD@
REPLACE_LCHOWN = @REPLACE_LCHOWN@
REPLACE_LINK = @REPLACE_LINK@
REPLACE_LINKAT = @REPLACE_LINKAT@
REPLACE_LSEEK = @REPLACE_LSEEK@
REPLACE_MALLOC = @REPLACE_MALLOC@
REPLACE_MBRLEN = @REPLACE_MBRLEN@
REPLACE_MBRTOWC = @REPLACE_MBRTOWC@
REPLACE_MBSINIT = @REPLACE_MBSINIT@
REPLACE_MBSNRTOWCS = @REPLACE_MBSNRTOWCS@
REPLACE_MBSRTOWCS = @REPLACE_MBSRTOWCS@
REPLACE_MBSTATE_T = @REPLACE_MBSTATE_T@
REPLACE_MBTOWC = @REPLACE_MBTOWC@
REPLACE_MEMCHR = @REPLACE_MEMCHR@
REPLACE_MEMMEM = @REPLACE_MEMMEM@
REPLACE_MKSTEMP = @REPLACE_MKSTEMP@
REPLACE_NULL = @REPLACE_NULL@
REPLACE_OBSTACK_PRINTF = @REPLACE_OBSTACK_PRINTF@
REPLACE_PERROR = @REPLACE_PERROR@
REPLACE_POPEN = @REPLACE_POPEN@
REPLACE_PREAD = @REPLACE_PREAD@
REPLACE_PRINTF = @REPLACE_PRINTF@
REPLACE_PTSNAME = @REPLACE_PTSNAME@
REPLACE_PTSNAME_R = @REPLACE_PTSNAME_R@
REPLACE_PUTENV = @REPLACE_PUTENV@
REPLACE_PWRITE = @REPLACE_PWRITE@
REPLACE_RANDOM_R = @REPLACE_RANDOM_R@
REPLACE_READ = @REPLACE_READ@
REPLACE_READLINK = @REPLACE_READLINK@
REPLACE_REALLOC = @REPLACE_REALLOC@
REPLACE_REALPATH = @REPLACE_REALPATH@
REPLACE_REMOVE = @REPLACE_REMOVE@
REPLACE_RENAME = @REPLACE_RENAME@
REPLACE_RENAMEAT = @REPLACE_RENAMEAT@
REPLACE_RMDIR = @REPLACE_RMDIR@
REPLACE_SETENV = @REPLACE_SETENV@
REPLACE_SLEEP = @REPLACE_SLEEP@
REPLACE_SNPRINTF = @REPLACE_SNPRINTF@
REPLACE_SPRINTF = @REPLACE_SPRINTF@
REPLACE_STDIO_READ_FUNCS = @REPLACE_STDIO_READ_FUNCS@
REPLACE_STDIO_WRITE_FUNCS = @REPLACE_STDIO_WRITE_FUNCS@
REPLACE_STPNCPY = @REPLACE_STPNCPY@
REPLACE_STRCASESTR = @REPLACE_STRCASESTR@
REPLACE_STRCHRNUL = @REPLACE_STRCHRNUL@
REPLACE_STRDUP = @REPLACE_STRDUP@
REPLACE_STRERROR = @REPLACE_STRERROR@
REPLACE_STRERROR_R = @REPLACE_STRERROR_R@
REPLACE_STRNCAT = @REPLACE_STRNCAT@
REPLACE_STRNDUP = @REPLACE_STRNDUP@
REPLACE_STRNLEN = @REPLACE_STRNLEN@
REPLACE_STRSIGNAL = @REPLACE_STRSIGNAL@
REPLACE_STRSTR = @REPLACE_STRSTR@
REPLACE_STRTOD = @REPLACE_STRTOD@
REPLACE_STRTOK_R = @REPLACE_STRTOK_R@
REPLACE_SYMLINK = @REPLACE_SYMLINK@
REPLACE_TMPFILE = @REPLACE_TMPFILE@
REPLACE_TTYNAME_R = @REPLACE_TTYNAME_R@
REPLACE_UNLINK = @REPLACE_UNLINK@
REPLACE_UNLINKAT = @REPLACE_UNLINKAT@
REPLACE_UNSETENV = @REPLACE_UNSETENV@
REPLACE_USLEEP = @REPLACE_USLEEP@
REPLACE_VASPRINTF = @REPLACE_VASPRINTF@
REPLACE_VDPRINTF = @REPLACE_VDPRINTF@
REPLACE_VFPRINTF = @REPLACE_VFPRINTF@
REPLACE_VPRINTF = @REPLACE_VPRINTF@
REPLACE_VSNPRINTF = @REPLACE_VSNPRINTF@
REPLACE_VSPRINTF = @REPLACE_VSPRINTF@
REPLACE_WCRTOMB = @REPLACE_WCRTOMB@
REPLACE_WCSNRTOMBS = @REPLACE_WCSNRTOMBS@
REPLACE_WCSRTOMBS = @REPLACE_WCSRTOMBS@
REPLACE_WCSWIDTH = @REPLACE_WCSWIDTH@
REPLACE_WCTOB = @REPLACE_WCTOB@
REPLACE_WCTOMB = @REPLACE_WCTOMB@
REPLACE_WCWIDTH = @REPLACE_WCWIDTH@
REPLACE_WRITE = @REPLACE_WRITE@
SDL2_CFLAGS = @SDL2_CFLAGS@
SDL2_LIBS = @SDL2_LIBS@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SIG_ATOMIC_T_SUFFIX = @SIG_ATOMIC_T_SUFFIX@
SIZE_T_SUFFIX = @SIZE_T_SUFFIX@
STDBOOL_H = @STDBOOL_H@
STDDEF_H = @STDDEF_H@
STDINT_H = @STDINT_H@
STRIP = @STRIP@
UNDEFINE_STRTOK_R = @UNDEFINE_STRTOK_R@
UNISTD_H_HAVE_WINSOCK2_H = @UNISTD_H_HAVE_WINSOCK2_H@
UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS = @UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS@
UPX = @UPX@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
WCHAR_T_SUFFIX = @WCHAR_T_SUFFIX@
WINDOWS_64_BIT_OFF_T = @WINDOWS_64_BIT_OFF_T@
WINDRES = @WINDRES@
WINT_T_SUFFIX = @WINT_T_SUFFIX@
XGETTEXT = @XGETTEXT@
XGETTEXT_015 = @XGETTEXT_015@
XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
gl_LIBOBJS = @gl_LIBOBJS@
gl_LTLIBOBJS = @gl_LTLIBOBJS@
gltests_LIBOBJS = @gltests_LIBOBJS@
gltests_LTLIBOBJS = @gltests_LTLIBOBJS@
gltests_WITNESS = @gltests_WITNESS@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
tests = @tests@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CXXFLAGS = -std=c++11 -Wno-write-strings -Wall
# Cf. (autoconf.info)Installation Directory Variables:
# Don't use DATADIR, it conflicts with something in MinGW

# Gnulib:
# includes generated files from top_builddir (not only top_srcdir)
AM_CPPFLAGS = -DBUILD_DATA_DIR=\"$(datadir)\" \
	-I$(top_srcdir)/gnulib/lib -I$(top_builddir)/gnulib/lib \
	$(am__append_1) $(am__append_2) $(am__append_3) \
	-I$(top_srcdir)/intl -I$(top_builddir)/intl
LDADD = $(top_builddir)/gnulib/lib/libgnu.a @LIBINTL@
COMMON_OBJS = app.cpp app.h bgm.cpp bgm.h BgTilesetsManager.cpp		\
	BgTilesetsManager.h dinkini.cpp dinkini.h DMod.cpp DMod.h	\
	fastfile.cpp fastfile.h str_util.cpp str_util.h io_util.cpp	\
	io_util.h EditorMap.cpp EditorMap.h editor_screen.cpp		\
	editor_screen.h gfx.cpp gfx.h gfx_tiles.cpp gfx_tiles.h		\
	gfx_palette.cpp gfx_palette.h gfx_fonts.cpp gfx_fonts.h		\
	hardness_tiles.cpp hardness_tiles.h ImageLoader.cpp		\
	ImageLoader.h IOGfxDisplay.cpp IOGfxDisplay.h			\
	IOGfxDisplayGL2.cpp IOGfxDisplayGL2.h IOGfxGLFuncs.cpp		\
	IOGfxGLFuncs.h IOGfxDisplaySW.cpp IOGfxDisplaySW.h		\
	IOGfxSurface.cpp IOGfxSurface.h IOGfxSurfaceGL2.cpp		\
	IOGfxSurfaceGL2.h IOGfxSurfaceSW.cpp IOGfxSurfaceSW.h		\
	IOGfxPrimitivesSW.cpp IOGfxPrimitives.h live_screen.cpp		\
	live_screen.h live_sprite.cpp live_sprite.h			\
	live_sprites_manager.cpp live_sprites_manager.h rect.cpp	\
	rect.h resources.cpp resources.h input.cpp input.h		\
	freedink_xpm.cpp freedink_xpm.h paths.cpp paths.h log.cpp	\
	log.h gfx_sprites.cpp gfx_sprites.h vgasys_fon.cpp		\
	vgasys_fon.h SDL_android_main.c sfx.cpp sfx.h

@ANDROID_TRUE@AM_CFLAGS = -fPIC
@ANDROID_TRUE@freedink_LDFLAGS = -shared
freedink_SOURCES = $(COMMON_OBJS) AppFreeDink.cpp AppFreeDink.h		\
	IOTouchDragAnywhere.cpp IOTouchDragAnywhere.h freedink.cpp	\
	freedink.h freedink_main.cpp update_frame.cpp update_frame.h	\
	brains.h brain.cpp brain.h brain_bounce.cpp brain_button.cpp	\
	brain_diagonal.cpp brain_duck.cpp brain_keyboard.cpp		\
	brain_lateral.cpp brain_missile.cpp brain_mouse.cpp		\
	brain_none.cpp brain_onetime.cpp brain_people.cpp		\
	brain_pig.cpp brain_repeat.cpp brain_scale.cpp			\
	brain_shadow.cpp brain_text.cpp dinkc_bindings.cpp		\
	dinkc_bindings.h dinkc.cpp dinkc.h dinkc_console.cpp		\
	dinkc_console.h dinkc_console_renderer.cpp			\
	dinkc_console_renderer.h debug.cpp debug.h debug_renderer.cpp	\
	debug_renderer.h game_choice.cpp game_choice.h			\
	game_choice_renderer.cpp game_choice_renderer.h			\
	game_engine.cpp game_engine.h game_state.cpp game_state.h	\
	i18n.cpp i18n.h inventory.cpp inventory.h meminfo.cpp		\
	meminfo.h savegame.cpp savegame.h status.cpp status.h		\
	text.cpp text.h

freedinkedit_SOURCES = $(COMMON_OBJS) AppFreeDinkedit.h	\
	freedinkedit.cpp

nodist_freedink_SOURCES = $(WOERES)
nodist_freedinkedit_SOURCES = $(WOERES)
EXTRA_DIST = media/freedink.ico media/system.sfd media/README \
	$(am__append_5)
resdir = $(top_srcdir)/share/freedink

# help2man-generated manpages
# Inspiration from (automake-1.10.info.gz)distcleancheck
dist_man_MANS = freedink.6 freedinkedit.6 dink.6 dinkedit.6
@HAVE_WINDRES_FALSE@WOERES = 

# How do we handle resources embedded in the executable binary?
@HAVE_WINDRES_TRUE@WOERES = woeres.rc
@HAVE_TESTS_TRUE@test_str_util_SOURCES = str_util.cpp test_str_util.cpp
@HAVE_TESTS_TRUE@test_io_util_SOURCES = io_util.cpp test_io_util.cpp
@HAVE_TESTS_TRUE@TestEditorMap_SOURCES = $(COMMON_OBJS) brain.cpp brain.h		\
@HAVE_TESTS_TRUE@	brain_bounce.cpp brain_button.cpp brain_diagonal.cpp		\
@HAVE_TESTS_TRUE@	brain_duck.cpp brain_keyboard.cpp brain_lateral.cpp		\
@HAVE_TESTS_TRUE@	brain_missile.cpp brain_mouse.cpp brain_none.cpp		\
@HAVE_TESTS_TRUE@	brain_onetime.cpp brain_people.cpp brain_pig.cpp		\
@HAVE_TESTS_TRUE@	brain_repeat.cpp brain_scale.cpp brain_shadow.cpp		\
@HAVE_TESTS_TRUE@	brain_text.cpp dinkc_bindings.cpp dinkc_bindings.h dinkc.cpp	\
@HAVE_TESTS_TRUE@	dinkc.h dinkc_console.cpp dinkc_console.h freedink.cpp		\
@HAVE_TESTS_TRUE@	game_engine.cpp game_engine.h game_choice.cpp game_choice.h	\
@HAVE_TESTS_TRUE@	game_state.cpp game_state.h i18n.cpp i18n.h inventory.cpp	\
@HAVE_TESTS_TRUE@	inventory.h meminfo.cpp meminfo.h savegame.cpp savegame.h	\
@HAVE_TESTS_TRUE@	status.cpp status.h text.cpp text.h TestEditorMap.cpp

@HAVE_TESTS_TRUE@test_dinkini_SOURCES = dinkini.cpp rect.cpp gfx_sprites.cpp	\
@HAVE_TESTS_TRUE@	ImageLoader.cpp fastfile.cpp str_util.cpp io_util.cpp	\
@HAVE_TESTS_TRUE@	paths.cpp log.cpp test_dinkini.cpp

@HAVE_TESTS_TRUE@test_dinkc_SOURCES = dinkc.cpp str_util.cpp paths.cpp io_util.cpp	\
@HAVE_TESTS_TRUE@	i18n.cpp test_dinkc.cpp

@HAVE_TESTS_TRUE@test_dinkc_console_SOURCES = test_dinkc_console.cpp dinkc_console.cpp	\
@HAVE_TESTS_TRUE@	str_util.cpp

@HAVE_TESTS_TRUE@test_editor_screen_SOURCES = $(COMMON_OBJS) brain.cpp brain.h		\
@HAVE_TESTS_TRUE@	brain_bounce.cpp brain_button.cpp brain_diagonal.cpp		\
@HAVE_TESTS_TRUE@	brain_duck.cpp brain_keyboard.cpp brain_lateral.cpp		\
@HAVE_TESTS_TRUE@	brain_missile.cpp brain_mouse.cpp brain_none.cpp		\
@HAVE_TESTS_TRUE@	brain_onetime.cpp brain_people.cpp brain_pig.cpp		\
@HAVE_TESTS_TRUE@	brain_repeat.cpp brain_scale.cpp brain_shadow.cpp		\
@HAVE_TESTS_TRUE@	brain_text.cpp dinkc_bindings.cpp dinkc_bindings.h dinkc.cpp	\
@HAVE_TESTS_TRUE@	dinkc.h dinkc_console.cpp dinkc_console.h freedink.cpp		\
@HAVE_TESTS_TRUE@	game_engine.cpp game_engine.h game_choice.cpp game_choice.h	\
@HAVE_TESTS_TRUE@	game_state.cpp game_state.h i18n.cpp i18n.h inventory.cpp	\
@HAVE_TESTS_TRUE@	inventory.h meminfo.cpp meminfo.h savegame.cpp savegame.h	\
@HAVE_TESTS_TRUE@	status.cpp status.h text.cpp text.h test_editor_screen.cpp

@HAVE_TESTS_TRUE@test_dinkc_bindings_SOURCES = $(COMMON_OBJS) brain.cpp brain.h		\
@HAVE_TESTS_TRUE@	brain_bounce.cpp brain_button.cpp brain_diagonal.cpp		\
@HAVE_TESTS_TRUE@	brain_duck.cpp brain_keyboard.cpp brain_lateral.cpp		\
@HAVE_TESTS_TRUE@	brain_missile.cpp brain_mouse.cpp brain_none.cpp		\
@HAVE_TESTS_TRUE@	brain_onetime.cpp brain_people.cpp brain_pig.cpp		\
@HAVE_TESTS_TRUE@	brain_repeat.cpp brain_scale.cpp brain_shadow.cpp		\
@HAVE_TESTS_TRUE@	brain_text.cpp dinkc_bindings.cpp dinkc_bindings.h dinkc.cpp	\
@HAVE_TESTS_TRUE@	dinkc.h dinkc_console.cpp dinkc_console.h freedink.cpp		\
@HAVE_TESTS_TRUE@	game_choice.cpp game_choice.h game_engine.cpp game_engine.h	\
@HAVE_TESTS_TRUE@	game_state.cpp game_state.h i18n.cpp i18n.h inventory.cpp	\
@HAVE_TESTS_TRUE@	inventory.h meminfo.cpp meminfo.h savegame.cpp savegame.h	\
@HAVE_TESTS_TRUE@	status.cpp status.h text.cpp text.h test_dinkc_bindings.cpp

@HAVE_TESTS_TRUE@test_live_sprites_manager_SOURCES = live_sprites_manager.cpp rect.cpp	\
@HAVE_TESTS_TRUE@	test_live_sprites_manager.cpp

@HAVE_TESTS_TRUE@test_brain_text_SOURCES = $(COMMON_OBJS) brain.cpp brain.h		\
@HAVE_TESTS_TRUE@	brain_bounce.cpp brain_button.cpp brain_diagonal.cpp		\
@HAVE_TESTS_TRUE@	brain_duck.cpp brain_keyboard.cpp brain_lateral.cpp		\
@HAVE_TESTS_TRUE@	brain_missile.cpp brain_mouse.cpp brain_none.cpp		\
@HAVE_TESTS_TRUE@	brain_onetime.cpp brain_people.cpp brain_pig.cpp		\
@HAVE_TESTS_TRUE@	brain_repeat.cpp brain_scale.cpp brain_shadow.cpp		\
@HAVE_TESTS_TRUE@	brain_text.cpp dinkc_bindings.cpp dinkc_bindings.h dinkc.cpp	\
@HAVE_TESTS_TRUE@	dinkc.h dinkc_console.cpp freedink.cpp game_choice.cpp		\
@HAVE_TESTS_TRUE@	game_choice.h game_engine.cpp game_engine.h game_state.cpp	\
@HAVE_TESTS_TRUE@	game_state.h i18n.cpp i18n.h inventory.cpp inventory.h		\
@HAVE_TESTS_TRUE@	meminfo.cpp meminfo.h savegame.cpp savegame.h status.cpp	\
@HAVE_TESTS_TRUE@	status.h text.cpp text.h test_brain_text.cpp

@HAVE_TESTS_TRUE@test_text_SOURCES = test_text.cpp text.cpp live_sprites_manager.cpp	\
@HAVE_TESTS_TRUE@	dinkini.cpp live_sprite.cpp rect.cpp gfx_sprites.cpp		\
@HAVE_TESTS_TRUE@	ImageLoader.cpp str_util.cpp io_util.cpp fastfile.cpp		\
@HAVE_TESTS_TRUE@	paths.cpp

@HAVE_TESTS_TRUE@test_gfx_fonts_SOURCES = test_gfx_fonts.cpp test_gfx_fonts_libe.h	\
@HAVE_TESTS_TRUE@	gfx_fonts.cpp rect.cpp ImageLoader.cpp str_util.cpp		\
@HAVE_TESTS_TRUE@	io_util.cpp paths.cpp resources.cpp gfx_palette.cpp		\
@HAVE_TESTS_TRUE@	FakeIOGfxDisplay.cpp FakeIOGfxDisplay.h IOGfxDisplay.cpp	\
@HAVE_TESTS_TRUE@	freedink_xpm.cpp

@HAVE_TESTS_TRUE@TestIOTouchDragAnywhere_SOURCES = TestIOTouchDragAnywhere.cpp	\
@HAVE_TESTS_TRUE@	IOTouchDragAnywhere.cpp

@HAVE_TESTS_TRUE@test_integration_SOURCES = $(COMMON_OBJS) brain.cpp brain.h		\
@HAVE_TESTS_TRUE@	brain_bounce.cpp brain_button.cpp brain_diagonal.cpp		\
@HAVE_TESTS_TRUE@	brain_duck.cpp brain_keyboard.cpp brain_lateral.cpp		\
@HAVE_TESTS_TRUE@	brain_missile.cpp brain_mouse.cpp brain_none.cpp		\
@HAVE_TESTS_TRUE@	brain_onetime.cpp brain_people.cpp brain_pig.cpp		\
@HAVE_TESTS_TRUE@	brain_repeat.cpp brain_scale.cpp brain_shadow.cpp		\
@HAVE_TESTS_TRUE@	brain_text.cpp dinkc_bindings.cpp dinkc_bindings.h dinkc.cpp	\
@HAVE_TESTS_TRUE@	dinkc.h dinkc_console.cpp dinkc_console.h freedink.cpp		\
@HAVE_TESTS_TRUE@	game_engine.cpp game_engine.h game_choice.cpp game_choice.h	\
@HAVE_TESTS_TRUE@	game_state.cpp game_state.h i18n.cpp i18n.h inventory.cpp	\
@HAVE_TESTS_TRUE@	inventory.h meminfo.cpp meminfo.h savegame.cpp savegame.h	\
@HAVE_TESTS_TRUE@	status.cpp status.h text.cpp text.h test_integration.cpp

@HAVE_TESTS_TRUE@TestIOGfxDisplay_SOURCES = TestIOGfxDisplay.cpp IOGfxDisplayGL2.cpp	\
@HAVE_TESTS_TRUE@	IOGfxDisplaySW.cpp IOGfxDisplay.cpp IOGfxSurfaceGL2.cpp		\
@HAVE_TESTS_TRUE@	IOGfxSurfaceSW.cpp IOGfxSurface.cpp IOGfxGLFuncs.cpp		\
@HAVE_TESTS_TRUE@	ImageLoader.cpp gfx_palette.cpp paths.cpp io_util.cpp		\
@HAVE_TESTS_TRUE@	str_util.cpp log.cpp freedink_xpm.cpp SDL_android_main.c

# Tests to run
@HAVE_TESTS_TRUE@TESTS = $(check_PROGRAMS)
# need to redefine it explicitely because we modified it for ANDROID :/
@ANDROID_FALSE@@HAVE_TESTS_TRUE@LOG_DRIVER = $(SHELL) $(top_srcdir)/autotools/test-driver

# Use ugly work-around
@ANDROID_TRUE@@HAVE_TESTS_TRUE@LOG_DRIVER = $(SHELL) $(top_srcdir)/android/remote-test-driver
# Needs graphics, will be marked as SKIP (driver detects 'shared')
# Can be tested manually by replacing libmain.so with it
@ANDROID_TRUE@@HAVE_TESTS_TRUE@TestIOGfxDisplay_LDFLAGS = -shared

# Outside of wine stdout/stderr is not working unless explicitely redirected with > and 2>
@HAVE_TESTS_TRUE@@WOE_TRUE@TestIOGfxDisplay_LDFLAGS = -mconsole
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .cxx .log .o .obj .rc .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnits src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnits src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
woeres.rc: $(top_builddir)/config.status $(srcdir)/woeres.rc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

installcheck-binPROGRAMS: $(bin_PROGRAMS)
	bad=0; pid=$$$$; list="$(bin_PROGRAMS)"; for p in $$list; do \
	  case ' $(AM_INSTALLCHECK_STD_OPTIONS_EXEMPT) ' in \
	   *" $$p "* | *" $(srcdir)/$$p "*) continue;; \
	  esac; \
	  f=`echo "$$p" | \
	     sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  for opt in --help --version; do \
	    if "$(DESTDIR)$(bindir)/$$f" $$opt >c$${pid}_.out \
	         2>c$${pid}_.err </dev/null \
		 && test -n "`cat c$${pid}_.out`" \
		 && test -z "`cat c$${pid}_.err`"; then :; \
	    else echo "$$f does not support $$opt" 1>&2; bad=1; fi; \
	  done; \
	done; rm -f c$${pid}_.???; exit $$bad

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)

TestEditorMap$(EXEEXT): $(TestEditorMap_OBJECTS) $(TestEditorMap_DEPENDENCIES) $(EXTRA_TestEditorMap_DEPENDENCIES) 
	@rm -f TestEditorMap$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(TestEditorMap_OBJECTS) $(TestEditorMap_LDADD) $(LIBS)

TestIOGfxDisplay$(EXEEXT): $(TestIOGfxDisplay_OBJECTS) $(TestIOGfxDisplay_DEPENDENCIES) $(EXTRA_TestIOGfxDisplay_DEPENDENCIES) 
	@rm -f TestIOGfxDisplay$(EXEEXT)
	$(AM_V_CXXLD)$(TestIOGfxDisplay_LINK) $(TestIOGfxDisplay_OBJECTS) $(TestIOGfxDisplay_LDADD) $(LIBS)

TestIOTouchDragAnywhere$(EXEEXT): $(TestIOTouchDragAnywhere_OBJECTS) $(TestIOTouchDragAnywhere_DEPENDENCIES) $(EXTRA_TestIOTouchDragAnywhere_DEPENDENCIES) 
	@rm -f TestIOTouchDragAnywhere$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(TestIOTouchDragAnywhere_OBJECTS) $(TestIOTouchDragAnywhere_LDADD) $(LIBS)

freedink$(EXEEXT): $(freedink_OBJECTS) $(freedink_DEPENDENCIES) $(EXTRA_freedink_DEPENDENCIES) 
	@rm -f freedink$(EXEEXT)
	$(AM_V_CXXLD)$(freedink_LINK) $(freedink_OBJECTS) $(freedink_LDADD) $(LIBS)

freedinkedit$(EXEEXT): $(freedinkedit_OBJECTS) $(freedinkedit_DEPENDENCIES) $(EXTRA_freedinkedit_DEPENDENCIES) 
	@rm -f freedinkedit$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(freedinkedit_OBJECTS) $(freedinkedit_LDADD) $(LIBS)

test_brain_text$(EXEEXT): $(test_brain_text_OBJECTS) $(test_brain_text_DEPENDENCIES) $(EXTRA_test_brain_text_DEPENDENCIES) 
	@rm -f test_brain_text$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_brain_text_OBJECTS) $(test_brain_text_LDADD) $(LIBS)

test_dinkc$(EXEEXT): $(test_dinkc_OBJECTS) $(test_dinkc_DEPENDENCIES) $(EXTRA_test_dinkc_DEPENDENCIES) 
	@rm -f test_dinkc$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_dinkc_OBJECTS) $(test_dinkc_LDADD) $(LIBS)

test_dinkc_bindings$(EXEEXT): $(test_dinkc_bindings_OBJECTS) $(test_dinkc_bindings_DEPENDENCIES) $(EXTRA_test_dinkc_bindings_DEPENDENCIES) 
	@rm -f test_dinkc_bindings$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_dinkc_bindings_OBJECTS) $(test_dinkc_bindings_LDADD) $(LIBS)

test_dinkc_console$(EXEEXT): $(test_dinkc_console_OBJECTS) $(test_dinkc_console_DEPENDENCIES) $(EXTRA_test_dinkc_console_DEPENDENCIES) 
	@rm -f test_dinkc_console$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_dinkc_console_OBJECTS) $(test_dinkc_console_LDADD) $(LIBS)

test_dinkini$(EXEEXT): $(test_dinkini_OBJECTS) $(test_dinkini_DEPENDENCIES) $(EXTRA_test_dinkini_DEPENDENCIES) 
	@rm -f test_dinkini$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_dinkini_OBJECTS) $(test_dinkini_LDADD) $(LIBS)

test_editor_screen$(EXEEXT): $(test_editor_screen_OBJECTS) $(test_editor_screen_DEPENDENCIES) $(EXTRA_test_editor_screen_DEPENDENCIES) 
	@rm -f test_editor_screen$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_editor_screen_OBJECTS) $(test_editor_screen_LDADD) $(LIBS)

test_gfx_fonts$(EXEEXT): $(test_gfx_fonts_OBJECTS) $(test_gfx_fonts_DEPENDENCIES) $(EXTRA_test_gfx_fonts_DEPENDENCIES) 
	@rm -f test_gfx_fonts$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_gfx_fonts_OBJECTS) $(test_gfx_fonts_LDADD) $(LIBS)

test_integration$(EXEEXT): $(test_integration_OBJECTS) $(test_integration_DEPENDENCIES) $(EXTRA_test_integration_DEPENDENCIES) 
	@rm -f test_integration$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_integration_OBJECTS) $(test_integration_LDADD) $(LIBS)

test_io_util$(EXEEXT): $(test_io_util_OBJECTS) $(test_io_util_DEPENDENCIES) $(EXTRA_test_io_util_DEPENDENCIES) 
	@rm -f test_io_util$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_io_util_OBJECTS) $(test_io_util_LDADD) $(LIBS)

test_live_sprites_manager$(EXEEXT): $(test_live_sprites_manager_OBJECTS) $(test_live_sprites_manager_DEPENDENCIES) $(EXTRA_test_live_sprites_manager_DEPENDENCIES) 
	@rm -f test_live_sprites_manager$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_live_sprites_manager_OBJECTS) $(test_live_sprites_manager_LDADD) $(LIBS)

test_str_util$(EXEEXT): $(test_str_util_OBJECTS) $(test_str_util_DEPENDENCIES) $(EXTRA_test_str_util_DEPENDENCIES) 
	@rm -f test_str_util$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_str_util_OBJECTS) $(test_str_util_LDADD) $(LIBS)

test_text$(EXEEXT): $(test_text_OBJECTS) $(test_text_DEPENDENCIES) $(EXTRA_test_text_DEPENDENCIES) 
	@rm -f test_text$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_text_OBJECTS) $(test_text_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AppFreeDink.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BgTilesetsManager.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DMod.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EditorMap.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FakeIOGfxDisplay.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IOGfxDisplay.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IOGfxDisplayGL2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IOGfxDisplaySW.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IOGfxGLFuncs.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IOGfxPrimitivesSW.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IOGfxSurface.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IOGfxSurfaceGL2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IOGfxSurfaceSW.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IOTouchDragAnywhere.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ImageLoader.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SDL_android_main.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestEditorMap.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestIOGfxDisplay.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestIOTouchDragAnywhere.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/app.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bgm.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brain.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brain_bounce.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brain_button.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brain_diagonal.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brain_duck.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brain_keyboard.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brain_lateral.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brain_missile.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brain_mouse.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brain_none.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brain_onetime.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brain_people.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brain_pig.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brain_repeat.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brain_scale.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brain_shadow.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brain_text.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/debug.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/debug_renderer.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dinkc.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dinkc_bindings.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dinkc_console.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dinkc_console_renderer.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dinkini.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/editor_screen.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fastfile.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/freedink.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/freedink_main.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/freedink_xpm.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/freedinkedit.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/game_choice.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/game_choice_renderer.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/game_engine.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/game_state.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gfx.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gfx_fonts.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gfx_palette.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gfx_sprites.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gfx_tiles.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hardness_tiles.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/i18n.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/input.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inventory.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/io_util.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/live_screen.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/live_sprite.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/live_sprites_manager.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/log.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/meminfo.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/paths.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rect.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/resources.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/savegame.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sfx.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/status.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/str_util.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_brain_text.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_dinkc.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_dinkc_bindings.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_dinkc_console.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_dinkini.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_editor_screen.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_gfx_fonts.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_integration.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_io_util.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_live_sprites_manager.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_str_util.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_text.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/text.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/update_frame.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vgasys_fon.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
install-man6: $(dist_man_MANS)
	@$(NORMAL_INSTALL)
	@list1=''; \
	list2='$(dist_man_MANS)'; \
	test -n "$(man6dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man6dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man6dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.6[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^6][0-9a-z]*$$,6,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man6dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man6dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man6dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man6dir)" || exit $$?; }; \
	done; }

uninstall-man6:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man6dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(dist_man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.6[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^6][0-9a-z]*$$,6,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man6dir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
test_str_util.log: test_str_util$(EXEEXT)
	@p='test_str_util$(EXEEXT)'; \
	b='test_str_util'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_io_util.log: test_io_util$(EXEEXT)
	@p='test_io_util$(EXEEXT)'; \
	b='test_io_util'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
TestEditorMap.log: TestEditorMap$(EXEEXT)
	@p='TestEditorMap$(EXEEXT)'; \
	b='TestEditorMap'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_editor_screen.log: test_editor_screen$(EXEEXT)
	@p='test_editor_screen$(EXEEXT)'; \
	b='test_editor_screen'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_dinkini.log: test_dinkini$(EXEEXT)
	@p='test_dinkini$(EXEEXT)'; \
	b='test_dinkini'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_dinkc.log: test_dinkc$(EXEEXT)
	@p='test_dinkc$(EXEEXT)'; \
	b='test_dinkc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_dinkc_console.log: test_dinkc_console$(EXEEXT)
	@p='test_dinkc_console$(EXEEXT)'; \
	b='test_dinkc_console'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_dinkc_bindings.log: test_dinkc_bindings$(EXEEXT)
	@p='test_dinkc_bindings$(EXEEXT)'; \
	b='test_dinkc_bindings'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_live_sprites_manager.log: test_live_sprites_manager$(EXEEXT)
	@p='test_live_sprites_manager$(EXEEXT)'; \
	b='test_live_sprites_manager'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_brain_text.log: test_brain_text$(EXEEXT)
	@p='test_brain_text$(EXEEXT)'; \
	b='test_brain_text'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_text.log: test_text$(EXEEXT)
	@p='test_text$(EXEEXT)'; \
	b='test_text'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_gfx_fonts.log: test_gfx_fonts$(EXEEXT)
	@p='test_gfx_fonts$(EXEEXT)'; \
	b='test_gfx_fonts'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
TestIOGfxDisplay.log: TestIOGfxDisplay$(EXEEXT)
	@p='TestIOGfxDisplay$(EXEEXT)'; \
	b='TestIOGfxDisplay'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
TestIOTouchDragAnywhere.log: TestIOTouchDragAnywhere$(EXEEXT)
	@p='TestIOTouchDragAnywhere$(EXEEXT)'; \
	b='TestIOTouchDragAnywhere'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_integration.log: test_integration$(EXEEXT)
	@p='test_integration$(EXEEXT)'; \
	b='test_integration'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS) $(MANS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man6dir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
@HAVE_TESTS_FALSE@clean-local:
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-local mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/AppFreeDink.Po
	-rm -f ./$(DEPDIR)/BgTilesetsManager.Po
	-rm -f ./$(DEPDIR)/DMod.Po
	-rm -f ./$(DEPDIR)/EditorMap.Po
	-rm -f ./$(DEPDIR)/FakeIOGfxDisplay.Po
	-rm -f ./$(DEPDIR)/IOGfxDisplay.Po
	-rm -f ./$(DEPDIR)/IOGfxDisplayGL2.Po
	-rm -f ./$(DEPDIR)/IOGfxDisplaySW.Po
	-rm -f ./$(DEPDIR)/IOGfxGLFuncs.Po
	-rm -f ./$(DEPDIR)/IOGfxPrimitivesSW.Po
	-rm -f ./$(DEPDIR)/IOGfxSurface.Po
	-rm -f ./$(DEPDIR)/IOGfxSurfaceGL2.Po
	-rm -f ./$(DEPDIR)/IOGfxSurfaceSW.Po
	-rm -f ./$(DEPDIR)/IOTouchDragAnywhere.Po
	-rm -f ./$(DEPDIR)/ImageLoader.Po
	-rm -f ./$(DEPDIR)/SDL_android_main.Po
	-rm -f ./$(DEPDIR)/TestEditorMap.Po
	-rm -f ./$(DEPDIR)/TestIOGfxDisplay.Po
	-rm -f ./$(DEPDIR)/TestIOTouchDragAnywhere.Po
	-rm -f ./$(DEPDIR)/app.Po
	-rm -f ./$(DEPDIR)/bgm.Po
	-rm -f ./$(DEPDIR)/brain.Po
	-rm -f ./$(DEPDIR)/brain_bounce.Po
	-rm -f ./$(DEPDIR)/brain_button.Po
	-rm -f ./$(DEPDIR)/brain_diagonal.Po
	-rm -f ./$(DEPDIR)/brain_duck.Po
	-rm -f ./$(DEPDIR)/brain_keyboard.Po
	-rm -f ./$(DEPDIR)/brain_lateral.Po
	-rm -f ./$(DEPDIR)/brain_missile.Po
	-rm -f ./$(DEPDIR)/brain_mouse.Po
	-rm -f ./$(DEPDIR)/brain_none.Po
	-rm -f ./$(DEPDIR)/brain_onetime.Po
	-rm -f ./$(DEPDIR)/brain_people.Po
	-rm -f ./$(DEPDIR)/brain_pig.Po
	-rm -f ./$(DEPDIR)/brain_repeat.Po
	-rm -f ./$(DEPDIR)/brain_scale.Po
	-rm -f ./$(DEPDIR)/brain_shadow.Po
	-rm -f ./$(DEPDIR)/brain_text.Po
	-rm -f ./$(DEPDIR)/debug.Po
	-rm -f ./$(DEPDIR)/debug_renderer.Po
	-rm -f ./$(DEPDIR)/dinkc.Po
	-rm -f ./$(DEPDIR)/dinkc_bindings.Po
	-rm -f ./$(DEPDIR)/dinkc_console.Po
	-rm -f ./$(DEPDIR)/dinkc_console_renderer.Po
	-rm -f ./$(DEPDIR)/dinkini.Po
	-rm -f ./$(DEPDIR)/editor_screen.Po
	-rm -f ./$(DEPDIR)/fastfile.Po
	-rm -f ./$(DEPDIR)/freedink.Po
	-rm -f ./$(DEPDIR)/freedink_main.Po
	-rm -f ./$(DEPDIR)/freedink_xpm.Po
	-rm -f ./$(DEPDIR)/freedinkedit.Po
	-rm -f ./$(DEPDIR)/game_choice.Po
	-rm -f ./$(DEPDIR)/game_choice_renderer.Po
	-rm -f ./$(DEPDIR)/game_engine.Po
	-rm -f ./$(DEPDIR)/game_state.Po
	-rm -f ./$(DEPDIR)/gfx.Po
	-rm -f ./$(DEPDIR)/gfx_fonts.Po
	-rm -f ./$(DEPDIR)/gfx_palette.Po
	-rm -f ./$(DEPDIR)/gfx_sprites.Po
	-rm -f ./$(DEPDIR)/gfx_tiles.Po
	-rm -f ./$(DEPDIR)/hardness_tiles.Po
	-rm -f ./$(DEPDIR)/i18n.Po
	-rm -f ./$(DEPDIR)/input.Po
	-rm -f ./$(DEPDIR)/inventory.Po
	-rm -f ./$(DEPDIR)/io_util.Po
	-rm -f ./$(DEPDIR)/live_screen.Po
	-rm -f ./$(DEPDIR)/live_sprite.Po
	-rm -f ./$(DEPDIR)/live_sprites_manager.Po
	-rm -f ./$(DEPDIR)/log.Po
	-rm -f ./$(DEPDIR)/meminfo.Po
	-rm -f ./$(DEPDIR)/paths.Po
	-rm -f ./$(DEPDIR)/rect.Po
	-rm -f ./$(DEPDIR)/resources.Po
	-rm -f ./$(DEPDIR)/savegame.Po
	-rm -f ./$(DEPDIR)/sfx.Po
	-rm -f ./$(DEPDIR)/status.Po
	-rm -f ./$(DEPDIR)/str_util.Po
	-rm -f ./$(DEPDIR)/test_brain_text.Po
	-rm -f ./$(DEPDIR)/test_dinkc.Po
	-rm -f ./$(DEPDIR)/test_dinkc_bindings.Po
	-rm -f ./$(DEPDIR)/test_dinkc_console.Po
	-rm -f ./$(DEPDIR)/test_dinkini.Po
	-rm -f ./$(DEPDIR)/test_editor_screen.Po
	-rm -f ./$(DEPDIR)/test_gfx_fonts.Po
	-rm -f ./$(DEPDIR)/test_integration.Po
	-rm -f ./$(DEPDIR)/test_io_util.Po
	-rm -f ./$(DEPDIR)/test_live_sprites_manager.Po
	-rm -f ./$(DEPDIR)/test_str_util.Po
	-rm -f ./$(DEPDIR)/test_text.Po
	-rm -f ./$(DEPDIR)/text.Po
	-rm -f ./$(DEPDIR)/update_frame.Po
	-rm -f ./$(DEPDIR)/vgasys_fon.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-local distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-man

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man6

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am: installcheck-binPROGRAMS

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/AppFreeDink.Po
	-rm -f ./$(DEPDIR)/BgTilesetsManager.Po
	-rm -f ./$(DEPDIR)/DMod.Po
	-rm -f ./$(DEPDIR)/EditorMap.Po
	-rm -f ./$(DEPDIR)/FakeIOGfxDisplay.Po
	-rm -f ./$(DEPDIR)/IOGfxDisplay.Po
	-rm -f ./$(DEPDIR)/IOGfxDisplayGL2.Po
	-rm -f ./$(DEPDIR)/IOGfxDisplaySW.Po
	-rm -f ./$(DEPDIR)/IOGfxGLFuncs.Po
	-rm -f ./$(DEPDIR)/IOGfxPrimitivesSW.Po
	-rm -f ./$(DEPDIR)/IOGfxSurface.Po
	-rm -f ./$(DEPDIR)/IOGfxSurfaceGL2.Po
	-rm -f ./$(DEPDIR)/IOGfxSurfaceSW.Po
	-rm -f ./$(DEPDIR)/IOTouchDragAnywhere.Po
	-rm -f ./$(DEPDIR)/ImageLoader.Po
	-rm -f ./$(DEPDIR)/SDL_android_main.Po
	-rm -f ./$(DEPDIR)/TestEditorMap.Po
	-rm -f ./$(DEPDIR)/TestIOGfxDisplay.Po
	-rm -f ./$(DEPDIR)/TestIOTouchDragAnywhere.Po
	-rm -f ./$(DEPDIR)/app.Po
	-rm -f ./$(DEPDIR)/bgm.Po
	-rm -f ./$(DEPDIR)/brain.Po
	-rm -f ./$(DEPDIR)/brain_bounce.Po
	-rm -f ./$(DEPDIR)/brain_button.Po
	-rm -f ./$(DEPDIR)/brain_diagonal.Po
	-rm -f ./$(DEPDIR)/brain_duck.Po
	-rm -f ./$(DEPDIR)/brain_keyboard.Po
	-rm -f ./$(DEPDIR)/brain_lateral.Po
	-rm -f ./$(DEPDIR)/brain_missile.Po
	-rm -f ./$(DEPDIR)/brain_mouse.Po
	-rm -f ./$(DEPDIR)/brain_none.Po
	-rm -f ./$(DEPDIR)/brain_onetime.Po
	-rm -f ./$(DEPDIR)/brain_people.Po
	-rm -f ./$(DEPDIR)/brain_pig.Po
	-rm -f ./$(DEPDIR)/brain_repeat.Po
	-rm -f ./$(DEPDIR)/brain_scale.Po
	-rm -f ./$(DEPDIR)/brain_shadow.Po
	-rm -f ./$(DEPDIR)/brain_text.Po
	-rm -f ./$(DEPDIR)/debug.Po
	-rm -f ./$(DEPDIR)/debug_renderer.Po
	-rm -f ./$(DEPDIR)/dinkc.Po
	-rm -f ./$(DEPDIR)/dinkc_bindings.Po
	-rm -f ./$(DEPDIR)/dinkc_console.Po
	-rm -f ./$(DEPDIR)/dinkc_console_renderer.Po
	-rm -f ./$(DEPDIR)/dinkini.Po
	-rm -f ./$(DEPDIR)/editor_screen.Po
	-rm -f ./$(DEPDIR)/fastfile.Po
	-rm -f ./$(DEPDIR)/freedink.Po
	-rm -f ./$(DEPDIR)/freedink_main.Po
	-rm -f ./$(DEPDIR)/freedink_xpm.Po
	-rm -f ./$(DEPDIR)/freedinkedit.Po
	-rm -f ./$(DEPDIR)/game_choice.Po
	-rm -f ./$(DEPDIR)/game_choice_renderer.Po
	-rm -f ./$(DEPDIR)/game_engine.Po
	-rm -f ./$(DEPDIR)/game_state.Po
	-rm -f ./$(DEPDIR)/gfx.Po
	-rm -f ./$(DEPDIR)/gfx_fonts.Po
	-rm -f ./$(DEPDIR)/gfx_palette.Po
	-rm -f ./$(DEPDIR)/gfx_sprites.Po
	-rm -f ./$(DEPDIR)/gfx_tiles.Po
	-rm -f ./$(DEPDIR)/hardness_tiles.Po
	-rm -f ./$(DEPDIR)/i18n.Po
	-rm -f ./$(DEPDIR)/input.Po
	-rm -f ./$(DEPDIR)/inventory.Po
	-rm -f ./$(DEPDIR)/io_util.Po
	-rm -f ./$(DEPDIR)/live_screen.Po
	-rm -f ./$(DEPDIR)/live_sprite.Po
	-rm -f ./$(DEPDIR)/live_sprites_manager.Po
	-rm -f ./$(DEPDIR)/log.Po
	-rm -f ./$(DEPDIR)/meminfo.Po
	-rm -f ./$(DEPDIR)/paths.Po
	-rm -f ./$(DEPDIR)/rect.Po
	-rm -f ./$(DEPDIR)/resources.Po
	-rm -f ./$(DEPDIR)/savegame.Po
	-rm -f ./$(DEPDIR)/sfx.Po
	-rm -f ./$(DEPDIR)/status.Po
	-rm -f ./$(DEPDIR)/str_util.Po
	-rm -f ./$(DEPDIR)/test_brain_text.Po
	-rm -f ./$(DEPDIR)/test_dinkc.Po
	-rm -f ./$(DEPDIR)/test_dinkc_bindings.Po
	-rm -f ./$(DEPDIR)/test_dinkc_console.Po
	-rm -f ./$(DEPDIR)/test_dinkini.Po
	-rm -f ./$(DEPDIR)/test_editor_screen.Po
	-rm -f ./$(DEPDIR)/test_gfx_fonts.Po
	-rm -f ./$(DEPDIR)/test_integration.Po
	-rm -f ./$(DEPDIR)/test_io_util.Po
	-rm -f ./$(DEPDIR)/test_live_sprites_manager.Po
	-rm -f ./$(DEPDIR)/test_str_util.Po
	-rm -f ./$(DEPDIR)/test_text.Po
	-rm -f ./$(DEPDIR)/text.Po
	-rm -f ./$(DEPDIR)/update_frame.Po
	-rm -f ./$(DEPDIR)/vgasys_fon.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-man
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
uninstall-man: uninstall-man6

.MAKE: check-am install-am install-exec-am install-strip uninstall-am

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-binPROGRAMS clean-checkPROGRAMS \
	clean-generic clean-local cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-local \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-exec-hook install-html install-html-am \
	install-info install-info-am install-man install-man6 \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am \
	installcheck-binPROGRAMS installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am uninstall-binPROGRAMS uninstall-hook \
	uninstall-man uninstall-man6

.PRECIOUS: Makefile

@ANDROID_TRUE@  # Build .so JNI libs rather than executables
@ANDROID_TRUE@  # Define here rather than configure.ac, otherwise config.h gets confused
install-exec-hook:
# UPX compression
# Not using --best because it takes much more time and the result is
# only a little bit smaller
# Needs to be done before bundling resources
@HAVE_UPX_TRUE@	-$(UPX) "$(DESTDIR)$(bindir)/freedink$(EXEEXT)"
@HAVE_UPX_TRUE@	-$(UPX) "$(DESTDIR)$(bindir)/freedinkedit$(EXEEXT)"
# Add 'dink' and 'dinkedit' aliases, to please 3rd-party tools
	$(LN_S) -f "freedink$(EXEEXT)" "$(DESTDIR)$(bindir)/dink$(EXEEXT)"
	$(LN_S) -f "freedinkedit$(EXEEXT)" "$(DESTDIR)$(bindir)/dinkedit$(EXEEXT)"

uninstall-hook:
	rm -f "$(DESTDIR)$(bindir)/dink$(EXEEXT)"
	rm -f "$(DESTDIR)$(bindir)/dinkedit$(EXEEXT)"
freedink.6: app.cpp $(top_srcdir)/configure.ac Makefile.am
	$(MAKE) $(AM_MAKEFLAGS) freedink$(EXEEXT)
	-$(HELP2MAN) -s6 -n "adventure and role-playing game (engine)"	\
	  --no-info --output=freedink.6 ./freedink$(EXEEXT)
freedinkedit.6: app.cpp $(top_srcdir)/configure.ac Makefile.am
	$(MAKE) $(AM_MAKEFLAGS) freedinkedit$(EXEEXT)
	-$(HELP2MAN) -s6 -n "adventure and role-playing game (editor)"	\
	  --no-info --output=freedinkedit.6 ./freedinkedit$(EXEEXT)
distclean-local:
	rm -f freedink.6 freedinkedit.6

# Woe icon and app infos
# Also check http://fragglet.livejournal.com/4448.html
.rc.o:
	$(WINDRES) -i $< -o $@
@HAVE_TESTS_TRUE@.cxx.cpp:
@HAVE_TESTS_TRUE@	$(CXXTESTGEN) --error-printer \
@HAVE_TESTS_TRUE@		--include test_android_workaround.h \
@HAVE_TESTS_TRUE@		--include config.h --include SDL.h \
@HAVE_TESTS_TRUE@		-o $@ $<

@HAVE_TESTS_TRUE@clean-local:
@HAVE_TESTS_TRUE@	rm -f $(patsubst %$(EXEEXT),%.cpp,$(check_PROGRAMS))
@HAVE_TESTS_TRUE@	rm -rf tmp_ts/

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
